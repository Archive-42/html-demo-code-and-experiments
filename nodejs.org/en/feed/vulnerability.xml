<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Node.js Blog: Vulnerability Reports]]></title><description><![CDATA[Node.js Blog: Vulnerability Reports]]></description><link>https://nodejs.org/en/</link><generator>metalsmith-feed</generator><lastBuildDate>Sat, 13 Nov 2021 06:13:07 GMT</lastBuildDate><atom:link href="https://nodejs.org/en/feed/vulnerability.xml" rel="self" type="application/rss+xml"/><author><![CDATA[Node.js]]></author><language><![CDATA[English]]></language><docs/><item><title><![CDATA[October 12th 2021 Security Releases]]></title><description><![CDATA[<h2 id="header-update-12-oct-2021-security-releases-available"><em>(Update 12-Oct-2021)</em> Security releases available<a id="update-12-oct-2021-security-releases-available" class="anchor" href="#update-12-oct-2021-security-releases-available" aria-labelledby="header-update-12-oct-2021-security-releases-available"></a></h2><p>Updates are now available for the v16.x, v14.x, and v12.x Node.js release lines for the
following issues.</p>
<h3 id="header-http-request-smuggling-due-to-spaced-in-headers-medium-cve-2021-22959">HTTP Request Smuggling due to spaced in headers (Medium)(CVE-2021-22959)<a id="http-request-smuggling-due-to-spaced-in-headers-medium-cve-2021-22959" class="anchor" href="#http-request-smuggling-due-to-spaced-in-headers-medium-cve-2021-22959" aria-labelledby="header-http-request-smuggling-due-to-spaced-in-headers-medium-cve-2021-22959"></a></h3><p>The http parser accepts requests with a space (SP) right after the header name before the colon. This can lead to HTTP Request Smuggling (HRS).
More details will be available at <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22959">CVE-2021-22959</a> after publication.</p>
<p>The fix for this is included in llhttp v2.1.4 and v6.0.6.</p>
<p>Thanks to Mattias Grenfeldt (<a href="https://grenfeldt.dev/">https://grenfeldt.dev/</a>) and Asta Olofsson for reporting this vulnerability.</p>
<p>Impacts:</p>
<ul>
<li>All versions of the 16.x, 14.x, and 12.x releases lines.</li>
</ul>
<h3 id="header-http-request-smuggling-when-parsing-the-body-medium-cve-2021-22960">HTTP Request Smuggling when parsing the body (Medium)(CVE-2021-22960)<a id="http-request-smuggling-when-parsing-the-body-medium-cve-2021-22960" class="anchor" href="#http-request-smuggling-when-parsing-the-body-medium-cve-2021-22960" aria-labelledby="header-http-request-smuggling-when-parsing-the-body-medium-cve-2021-22960"></a></h3><p>The parse ignores chunk extensions when parsing the body of chunked requests. This leads to HTTP Request Smuggling (HRS) under certain conditions.
More details will be available at <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22960">CVE-2021-22960</a> after publication.</p>
<p>THe fix for this is included in llhttp v2.1.4 and v6.0.6.</p>
<p>Thanks to Mattias Grenfeldt (<a href="https://grenfeldt.dev/">https://grenfeldt.dev/</a>) and Asta Olofsson for reporting this vulnerability.</p>
<p>Impacts:</p>
<ul>
<li>All versions of the 16.x, 14.x, and 12.x releases lines.</li>
</ul>
<h2 id="header-downloads-and-release-details">Downloads and release details<a id="downloads-and-release-details" class="anchor" href="#downloads-and-release-details" aria-labelledby="header-downloads-and-release-details"></a></h2><ul>
<li><a href="https://nodejs.org/en/blog/release/v12.22.7/">Node.js v12.22.7 (LTS)</a></li>
<li><a href="https://nodejs.org/en/blog/release/v14.18.1/">Node.js v14.18.1 (LTS)</a></li>
<li><a href="https://nodejs.org/en/blog/release/v16.11.1/">Node.js v16.11.1 (Current)</a></li>
</ul>
<hr>
<h1 id="header-summary">Summary<a id="summary" class="anchor" href="#summary" aria-labelledby="header-summary"></a></h1><p>The Node.js project will release new versions of the 12.x, 14.x, and 16.x releases lines on or shortly after Tuesday</p>
<p>October 12th, 2021 in order to address:</p>
<ul>
<li>Two medium severity issues</li>
</ul>
<h2 id="header-impact">Impact<a id="impact" class="anchor" href="#impact" aria-labelledby="header-impact"></a></h2><p>The 16.x release line of Node.js is vulnerable to two medium severity issues.</p>
<p>The 14.x release line of Node.js is vulnerable to two medium severity issues.</p>
<p>The 12.x release line of Node.js is vulnerable to two medium severity issues.</p>
<h2 id="header-release-timing">Release timing<a id="release-timing" class="anchor" href="#release-timing" aria-labelledby="header-release-timing"></a></h2><p>Releases will be available at, or shortly after, Tuesday, October 12th, 2021.</p>
<h2 id="header-contact-and-future-updates">Contact and future updates<a id="contact-and-future-updates" class="anchor" href="#contact-and-future-updates" aria-labelledby="header-contact-and-future-updates"></a></h2><p>The current Node.js security policy can be found at <a href="https://nodejs.org/en/security/">https://nodejs.org/en/security/</a>. Please follow the process outlined in <a href="https://github.com/nodejs/node/blob/master/SECURITY.md">https://github.com/nodejs/node/blob/master/SECURITY.md</a> if you wish to report a vulnerability in Node.js.</p>
<p>Subscribe to the low-volume announcement-only nodejs-sec mailing list at <a href="https://groups.google.com/forum/#!forum/nodejs-sec">https://groups.google.com/forum/#!forum/nodejs-sec</a> to stay up to date on security vulnerabilities and security-related releases of Node.js and the projects maintained in the nodejs GitHub organization.</p>
]]></description><link>https://nodejs.org/en/blog/vulnerability/oct-2021-security-releases</link><guid isPermaLink="true">https://nodejs.org/en/blog/vulnerability/oct-2021-security-releases</guid><dc:creator><![CDATA[Matteo Collina]]></dc:creator><pubDate>Tue, 12 Oct 2021 16:00:00 GMT</pubDate></item><item><title><![CDATA[August 31 2021 Security Releases]]></title><description><![CDATA[<h2 id="header-update-31-aug-2021-security-releases-available"><em>(Update 31-Aug-2021)</em> Security releases available<a id="update-31-aug-2021-security-releases-available" class="anchor" href="#update-31-aug-2021-security-releases-available" aria-labelledby="header-update-31-aug-2021-security-releases-available"></a></h2><p>Updates are now available for v14.x, and v12.x Node.js release lines for the
following issues.</p>
<h3 id="header-npm-6-update-node-tar-arborist-npm-cli-modules">npm 6 update - node-tar, arborist, npm cli modules<a id="npm-6-update-node-tar-arborist-npm-cli-modules" class="anchor" href="#npm-6-update-node-tar-arborist-npm-cli-modules" aria-labelledby="header-npm-6-update-node-tar-arborist-npm-cli-modules"></a></h3><p>These are vulnerabilities in the node-tar, arborist, and npm cli modules which
are related to the initial reports and subsequent remediation of node-tar
vulnerabilities <a href="https://github.com/advisories/GHSA-r628-mhmh-qjhw">CVE-2021-32803</a>
and <a href="https://github.com/advisories/GHSA-3jfq-g458-7qm9">CVE-2021-32804</a>.
Subsequent internal security review of node-tar and additional external bounty
reports have resulted in another 5 CVE being remediated in core npm CLI
dependencies including node-tar, and npm arborist.</p>
<p>You can read more about it in:</p>
<ul>
<li><a href="https://github.com/npm/node-tar/security/advisories/GHSA-9r2w-394v-53qc">CVE-2021-37701</a></li>
<li><a href="https://github.com/npm/node-tar/security/advisories/GHSA-qq89-hq3f-393p">CVE-2021-37712</a></li>
<li><a href="https://github.com/npm/node-tar/security/advisories/GHSA-5955-9wpr-37jh">CVE-2021-37713</a></li>
<li><a href="https://github.com/npm/arborist/security/advisories/GHSA-2h3h-q99f-3fhc">CVE-2021-39134</a></li>
<li><a href="https://github.com/npm/arborist/security/advisories/GHSA-gmw6-94gg-2rc2">CVE-2021-39135</a></li>
</ul>
<p>Impacts:</p>
<ul>
<li>All versions of the 14.x, and 12.x releases lines</li>
</ul>
<h2 id="header-downloads-and-release-details">Downloads and release details<a id="downloads-and-release-details" class="anchor" href="#downloads-and-release-details" aria-labelledby="header-downloads-and-release-details"></a></h2><ul>
<li><a href="https://nodejs.org/en/blog/release/v12.22.6/">Node.js v12.22.6 (LTS)</a></li>
<li><a href="https://nodejs.org/en/blog/release/v14.17.6/">Node.js v14.17.6 (LTS)</a></li>
</ul>
<hr>
<h1 id="header-summary">Summary<a id="summary" class="anchor" href="#summary" aria-labelledby="header-summary"></a></h1><p>The Node.js project will release new versions of 12.x, and 14.x releases lines on or shortly after Tuesday
August 31th, 2021 in order to address:</p>
<ul>
<li>Three high severity issues, and two moderate severity issues.</li>
</ul>
<h2 id="header-impact">Impact<a id="impact" class="anchor" href="#impact" aria-labelledby="header-impact"></a></h2><p>The 14.x release line of Node.js is vulnerable to three high severity issues, and two moderate severity issues</p>
<p>The 12.x release line of Node.js is vulnerable to three high severity issues, and two moderate severity issues.</p>
<h2 id="header-release-timing">Release timing<a id="release-timing" class="anchor" href="#release-timing" aria-labelledby="header-release-timing"></a></h2><p>Releases will be available at, or shortly after, Tuesday, August 31th, 2021.</p>
<h2 id="header-contact-and-future-updates">Contact and future updates<a id="contact-and-future-updates" class="anchor" href="#contact-and-future-updates" aria-labelledby="header-contact-and-future-updates"></a></h2><p>The current Node.js security policy can be found at <a href="https://nodejs.org/en/security/">https://nodejs.org/en/security/</a>. Please follow the process outlined in <a href="https://github.com/nodejs/node/blob/master/SECURITY.md">https://github.com/nodejs/node/blob/master/SECURITY.md</a> if you wish to report a vulnerability in Node.js.</p>
<p>Subscribe to the low-volume announcement-only nodejs-sec mailing list at <a href="https://groups.google.com/forum/#!forum/nodejs-sec">https://groups.google.com/forum/#!forum/nodejs-sec</a> to stay up to date on security vulnerabilities and security-related releases of Node.js and the projects maintained in the nodejs GitHub organization.</p>
]]></description><link>https://nodejs.org/en/blog/vulnerability/aug-2021-security-releases2</link><guid isPermaLink="true">https://nodejs.org/en/blog/vulnerability/aug-2021-security-releases2</guid><dc:creator><![CDATA[Daniel Bevenius]]></dc:creator><pubDate>Tue, 31 Aug 2021 16:00:00 GMT</pubDate></item><item><title><![CDATA[August 2021 Security Releases]]></title><description><![CDATA[<h2 id="header-update-11-aug-2021-security-releases-available"><em>(Update 11-Aug-2021)</em> Security releases available<a id="update-11-aug-2021-security-releases-available" class="anchor" href="#update-11-aug-2021-security-releases-available" aria-labelledby="header-update-11-aug-2021-security-releases-available"></a></h2><p>Updates are now available for v16.x, v14.x, and v12.x Node.js release lines for the
following issues.</p>
<h3 id="header-cares-upgrade-improper-handling-of-untypical-characters-in-domain-names-high-cve-2021-22931">cares upgrade - Improper handling of untypical characters in domain names (High) (CVE-2021-22931)<a id="cares-upgrade-improper-handling-of-untypical-characters-in-domain-names-high-cve-2021-22931" class="anchor" href="#cares-upgrade-improper-handling-of-untypical-characters-in-domain-names-high-cve-2021-22931" aria-labelledby="header-cares-upgrade-improper-handling-of-untypical-characters-in-domain-names-high-cve-2021-22931"></a></h3><p>Node.js was vulnerable to Remote Code Execution, XSS, application crashes due to missing input
validation of host names returned by Domain Name Servers in the Node.js DNS library which can
lead to output of wrong hostnames (leading to Domain Hijacking) and injection vulnerabilities
in applications using the library.</p>
<p>You can read more about it in:
<a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22931">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22931</a></p>
<p>Impacts:</p>
<ul>
<li>All versions of the 16.x, 14.x, and 12.x releases lines</li>
</ul>
<p>Thank you to Philipp Jeitner from Fraunhofer SIT for reporting this vulnerability.</p>
<h3 id="header-use-after-free-on-close-http2-on-stream-canceling-high-cve-2021-22940">Use after free on close http2 on stream canceling (High) (CVE-2021-22940)<a id="use-after-free-on-close-http2-on-stream-canceling-high-cve-2021-22940" class="anchor" href="#use-after-free-on-close-http2-on-stream-canceling-high-cve-2021-22940" aria-labelledby="header-use-after-free-on-close-http2-on-stream-canceling-high-cve-2021-22940"></a></h3><p>Node.js was vulnerable to a use after free attack where an attacker might be able to exploit
memory corruption to change process behavior. The issue is a follow on to CVE-2021-22930
as the issue was not completely resolved in the fix for CVE-2021-22930.</p>
<p>You can read more about it in:
<a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22940">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22940</a></p>
<p>Impacts:</p>
<ul>
<li>All versions of the 16.x, 14.x, and 12.x releases lines</li>
</ul>
<p>Thank you to Eran Levin (exx8) for reporting the original vulnerability and those who helped identify the remaining issues.</p>
<h3 id="header-incomplete-validation-of-rejectunauthorized-parameter-low-cve-2021-22939">Incomplete validation of rejectUnauthorized parameter (Low) (CVE-2021-22939)<a id="incomplete-validation-of-rejectunauthorized-parameter-low-cve-2021-22939" class="anchor" href="#incomplete-validation-of-rejectunauthorized-parameter-low-cve-2021-22939" aria-labelledby="header-incomplete-validation-of-rejectunauthorized-parameter-low-cve-2021-22939"></a></h3><p>If the Node.js https API was used incorrectly and &quot;undefined&quot; was in passed for the
&quot;rejectUnauthorized&quot; parameter, no error was returned and connections
to servers with an expired certificate would have been accepted.</p>
<p>You can read more about it in:
<a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22939">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22939</a></p>
<p>Impacts:</p>
<ul>
<li>All versions of the 16.x, 14.x, and 12.x releases lines</li>
</ul>
<p>Thank you to Tim Perry, from HTTP Toolkit for reporting this vulnerability.</p>
<h2 id="header-downloads-and-release-details">Downloads and release details<a id="downloads-and-release-details" class="anchor" href="#downloads-and-release-details" aria-labelledby="header-downloads-and-release-details"></a></h2><ul>
<li><a href="https://nodejs.org/en/blog/release/v12.22.5/">Node.js v12.22.5 (LTS)</a></li>
<li><a href="https://nodejs.org/en/blog/release/v14.17.5/">Node.js v14.17.5 (LTS)</a></li>
<li><a href="https://nodejs.org/en/blog/release/v16.6.2/">Node.js v16.6.2 (Current)</a></li>
</ul>
<hr>
<h1 id="header-summary">Summary<a id="summary" class="anchor" href="#summary" aria-labelledby="header-summary"></a></h1><p>The Node.js project will release new versions of all supported release lines on or shortly after Wednesday
August 11th, 2021 in order to address:</p>
<ul>
<li>Two high severity issues and one low severity issue.</li>
</ul>
<h2 id="header-impact">Impact<a id="impact" class="anchor" href="#impact" aria-labelledby="header-impact"></a></h2><p>The 16.x release line of Node.js is vulnerable to two high severity issues and one low severity issue.</p>
<p>The 14.x release line of Node.js is vulnerable to two high severity issues and one low severity issue.</p>
<p>The 12.x release line of Node.js is vulnerable to two high severity issues and one low severity issue.</p>
<h2 id="header-release-timing">Release timing<a id="release-timing" class="anchor" href="#release-timing" aria-labelledby="header-release-timing"></a></h2><p>Releases will be available at, or shortly after, Wednesday, August 11th, 2021.</p>
<h2 id="header-contact-and-future-updates">Contact and future updates<a id="contact-and-future-updates" class="anchor" href="#contact-and-future-updates" aria-labelledby="header-contact-and-future-updates"></a></h2><p>The current Node.js security policy can be found at <a href="https://nodejs.org/en/security/">https://nodejs.org/en/security/</a>. Please follow the process outlined in <a href="https://github.com/nodejs/node/blob/master/SECURITY.md">https://github.com/nodejs/node/blob/master/SECURITY.md</a> if you wish to report a vulnerability in Node.js.</p>
<p>Subscribe to the low-volume announcement-only nodejs-sec mailing list at <a href="https://groups.google.com/forum/#!forum/nodejs-sec">https://groups.google.com/forum/#!forum/nodejs-sec</a> to stay up to date on security vulnerabilities and security-related releases of Node.js and the projects maintained in the nodejs GitHub organization.</p>
]]></description><link>https://nodejs.org/en/blog/vulnerability/aug-2021-security-releases</link><guid isPermaLink="true">https://nodejs.org/en/blog/vulnerability/aug-2021-security-releases</guid><dc:creator><![CDATA[Michael Dawson]]></dc:creator><pubDate>Wed, 11 Aug 2021 16:00:00 GMT</pubDate></item><item><title><![CDATA[July 2021 Security Releases]]></title><description><![CDATA[<h2 id="header-security-releases-available">Security releases available<a id="security-releases-available" class="anchor" href="#security-releases-available" aria-labelledby="header-security-releases-available"></a></h2><p>Updates are now available for v16.x, v14.x, and v12.x Node.js release lines for
the following issue.</p>
<p>We normally like to give advance notice and provide releases in which the only
changes are security fixes, but since this vulnerability was already public we
felt it was more important to get this fix out fast in releases that were
already planned.</p>
<h3 id="header-use-after-free-on-close-http2-on-stream-canceling-high-cve-2021-22930">Use after free on close http2 on stream canceling (High) (CVE-2021-22930)<a id="use-after-free-on-close-http2-on-stream-canceling-high-cve-2021-22930" class="anchor" href="#use-after-free-on-close-http2-on-stream-canceling-high-cve-2021-22930" aria-labelledby="header-use-after-free-on-close-http2-on-stream-canceling-high-cve-2021-22930"></a></h3><p>Node.js is vulnerable to a use after free attack where an attacker might
be able to exploit the memory corruption, to change process behavior.</p>
<p>You can read more about it in
<a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22930">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22930</a></p>
<p>Thank you to Eran Levin (exx8) for reporting this vulnerability.</p>
<p>Impacts:</p>
<ul>
<li>All versions of the 16.x, 14.x, and 12.x releases lines</li>
</ul>
<h2 id="header-downloads-and-release-details">Downloads and release details<a id="downloads-and-release-details" class="anchor" href="#downloads-and-release-details" aria-labelledby="header-downloads-and-release-details"></a></h2><ul>
<li><a href="https://nodejs.org/en/blog/release/v12.22.4/">Node.js v12.22.4 (LTS)</a></li>
<li><a href="https://nodejs.org/en/blog/release/v14.17.4/">Node.js v14.17.4 (LTS)</a></li>
<li><a href="https://nodejs.org/en/blog/release/v16.6.0/">Node.js v16.6.0 (Current)</a></li>
</ul>
]]></description><link>https://nodejs.org/en/blog/vulnerability/july-2021-security-releases-2</link><guid isPermaLink="true">https://nodejs.org/en/blog/vulnerability/july-2021-security-releases-2</guid><dc:creator><![CDATA[Daniel Bevenius]]></dc:creator><pubDate>Thu, 29 Jul 2021 16:00:00 GMT</pubDate></item><item><title><![CDATA[July 2021 Security Releases]]></title><description><![CDATA[<h2 id="header-update-1-jul-2021-security-releases-available"><em>(Update 1-Jul-2021)</em> Security releases available<a id="update-1-jul-2021-security-releases-available" class="anchor" href="#update-1-jul-2021-security-releases-available" aria-labelledby="header-update-1-jul-2021-security-releases-available"></a></h2><p>Updates are now available for v16.x, v14.x, and v12.x Node.js release lines for the
following issues.</p>
<h3 id="header-libuv-upgrade-out-of-bounds-read-medium-cve-2021-22918">libuv upgrade - Out of bounds read (Medium) (CVE-2021-22918)<a id="libuv-upgrade-out-of-bounds-read-medium-cve-2021-22918" class="anchor" href="#libuv-upgrade-out-of-bounds-read-medium-cve-2021-22918" aria-labelledby="header-libuv-upgrade-out-of-bounds-read-medium-cve-2021-22918"></a></h3><p>Node.js is vulnerable to out-of-bounds read in libuv&#39;s uv__idna_toascii()
function which is used to convert strings to ASCII. This is called by Node&#39;s dns
module&#39;s lookup() function and can lead to information disclosures or crashes.</p>
<p>You can read more about it in
<a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22918">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22918</a></p>
<p>Impacts:</p>
<ul>
<li>All versions of the 16.x, 14.x, and 12.x releases lines</li>
</ul>
<h3 id="header-windows-installer-node-installer-local-privilege-escalation-medium-cve-2021-22921">Windows installer - Node Installer Local Privilege Escalation (Medium) (CVE-2021-22921)<a id="windows-installer-node-installer-local-privilege-escalation-medium-cve-2021-22921" class="anchor" href="#windows-installer-node-installer-local-privilege-escalation-medium-cve-2021-22921" aria-labelledby="header-windows-installer-node-installer-local-privilege-escalation-medium-cve-2021-22921"></a></h3><p>Node.js is vulnerable to local privilege escalation attacks under certain
conditions on Windows platforms. More specifically, improper configuration of
permissions in the installation directory allows an attacker to perform two
different escalation attacks: PATH and DLL hijacking.</p>
<p>You can read more about it in
<a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22921">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22921</a></p>
<p>Impacts:</p>
<ul>
<li>All versions of the 16.x, 14.x, and 12.x releases lines</li>
</ul>
<h3 id="header-npm-upgrade-ssri-regular-expression-denial-of-service-redos-high-cve-2021-27290">npm upgrade - ssri Regular Expression Denial of Service (ReDoS) (High) (CVE-2021-27290)<a id="npm-upgrade-ssri-regular-expression-denial-of-service-redos-high-cve-2021-27290" class="anchor" href="#npm-upgrade-ssri-regular-expression-denial-of-service-redos-high-cve-2021-27290" aria-labelledby="header-npm-upgrade-ssri-regular-expression-denial-of-service-redos-high-cve-2021-27290"></a></h3><p>This is a vulnerability in the ssri npm module which may be vulnerable to
denial of service attacks.</p>
<p>You can read more about it in
<a href="https://github.com/advisories/GHSA-vx3p-948g-6vhq">https://github.com/advisories/GHSA-vx3p-948g-6vhq</a></p>
<p>Impacts:</p>
<ul>
<li>All versions of the 12.x release line</li>
<li>Versions of the 14.x release line before 14.17.0 which included an update to the latest npm 6.</li>
</ul>
<h3 id="header-npm-upgrade-hosted-git-info-regular-expression-denial-of-service-redos-medium-cve-2021-23362">npm upgrade - hosted-git-info Regular Expression Denial of Service (ReDoS) (Medium) (CVE-2021-23362)<a id="npm-upgrade-hosted-git-info-regular-expression-denial-of-service-redos-medium-cve-2021-23362" class="anchor" href="#npm-upgrade-hosted-git-info-regular-expression-denial-of-service-redos-medium-cve-2021-23362" aria-labelledby="header-npm-upgrade-hosted-git-info-regular-expression-denial-of-service-redos-medium-cve-2021-23362"></a></h3><p>This is a vulnerability in the hosted-git-info npm module which may be
vulnerable to denial of service attacks.</p>
<p>You can read more about it in
<a href="https://nvd.nist.gov/vuln/detail/CVE-2021-23362">https://nvd.nist.gov/vuln/detail/CVE-2021-23362</a></p>
<p>Impacts:</p>
<ul>
<li>All versions of the 12.x release line</li>
<li>Versions of the 14.x release line before 14.17.0 which included an update to the latest npm 6.</li>
</ul>
<h2 id="header-downloads-and-release-details">Downloads and release details<a id="downloads-and-release-details" class="anchor" href="#downloads-and-release-details" aria-labelledby="header-downloads-and-release-details"></a></h2><ul>
<li><a href="https://nodejs.org/en/blog/release/v12.22.2/">Node.js v12.22.2 (LTS)</a></li>
<li><a href="https://nodejs.org/en/blog/release/v14.17.2/">Node.js v14.17.2 (LTS)</a></li>
<li><a href="https://nodejs.org/en/blog/release/v16.4.1/">Node.js v16.4.1 (LTS)</a></li>
</ul>
<hr>
<h1 id="header-summary">Summary<a id="summary" class="anchor" href="#summary" aria-labelledby="header-summary"></a></h1><p>The Node.js project will release new versions of all supported release lines on or shortly after Thursday, July 1st, 2021.</p>
<ul>
<li>One High severity issue, and three Medium severity issues</li>
</ul>
<h2 id="header-impact">Impact<a id="impact" class="anchor" href="#impact" aria-labelledby="header-impact"></a></h2><p>The 16.x release line of Node.js is vulnerable to two medium severity issues.</p>
<p>The 14.x release line of Node.js is vulnerable to two medium severity issues.</p>
<p>The 12.x release line of Node.js is vulnerable to one high and three medium severity issues.</p>
<h2 id="header-release-timing">Release timing<a id="release-timing" class="anchor" href="#release-timing" aria-labelledby="header-release-timing"></a></h2><p>Releases will be available at, or shortly after, Thursday, July 1st, 2021.</p>
<h2 id="header-contact-and-future-updates">Contact and future updates<a id="contact-and-future-updates" class="anchor" href="#contact-and-future-updates" aria-labelledby="header-contact-and-future-updates"></a></h2><p>The current Node.js security policy can be found at <a href="https://nodejs.org/en/security/">https://nodejs.org/en/security/</a>. Please follow the process outlined in <a href="https://github.com/nodejs/node/blob/master/SECURITY.md">https://github.com/nodejs/node/blob/master/SECURITY.md</a> if you wish to report a vulnerability in Node.js.</p>
<p>Subscribe to the low-volume announcement-only nodejs-sec mailing list at <a href="https://groups.google.com/forum/#!forum/nodejs-sec">https://groups.google.com/forum/#!forum/nodejs-sec</a> to stay up to date on security vulnerabilities and security-related releases of Node.js and the projects maintained in the nodejs GitHub organization.</p>
]]></description><link>https://nodejs.org/en/blog/vulnerability/july-2021-security-releases</link><guid isPermaLink="true">https://nodejs.org/en/blog/vulnerability/july-2021-security-releases</guid><dc:creator><![CDATA[Daniel Bevenius]]></dc:creator><pubDate>Thu, 01 Jul 2021 16:00:00 GMT</pubDate></item><item><title><![CDATA[April 2021 Security Releases]]></title><description><![CDATA[<h2 id="header-update-6-apr-2021-security-releases-available"><em>(Update 6-Apr-2021)</em> Security releases available<a id="update-6-apr-2021-security-releases-available" class="anchor" href="#update-6-apr-2021-security-releases-available" aria-labelledby="header-update-6-apr-2021-security-releases-available"></a></h2><p>Updates are now available for v10,x, v12.x, v14.x and v15.x Node.js release lines for the following issues.</p>
<h3 id="header-openssl-ca-certificate-check-bypass-with-x509_v_flag_x509_strict-high-cve-2021-3450">OpenSSL - CA certificate check bypass with X509_V_FLAG_X509_STRICT (High) (CVE-2021-3450)<a id="openssl-ca-certificate-check-bypass-with-x509_v_flag_x509_strict-high-cve-2021-3450" class="anchor" href="#openssl-ca-certificate-check-bypass-with-x509_v_flag_x509_strict-high-cve-2021-3450" aria-labelledby="header-openssl-ca-certificate-check-bypass-with-x509_v_flag_x509_strict-high-cve-2021-3450"></a></h3><p>This is a vulnerability in OpenSSL which may be exploited through Node.js. You can read more about it in
<a href="https://www.openssl.org/news/secadv/20210325.txt">https://www.openssl.org/news/secadv/20210325.txt</a></p>
<p>Impacts:</p>
<ul>
<li>All versions of the 15.x, 14.x, 12.x and 10.x releases lines</li>
</ul>
<h3 id="header-openssl-null-pointer-deref-in-signature_algorithms-processing-high-cve-2021-3449">OpenSSL - NULL pointer deref in signature_algorithms processing (High) (CVE-2021-3449)<a id="openssl-null-pointer-deref-in-signature_algorithms-processing-high-cve-2021-3449" class="anchor" href="#openssl-null-pointer-deref-in-signature_algorithms-processing-high-cve-2021-3449" aria-labelledby="header-openssl-null-pointer-deref-in-signature_algorithms-processing-high-cve-2021-3449"></a></h3><p>This is a vulnerability in OpenSSL which may be exploited through Node.js. You can read more about it in
<a href="https://www.openssl.org/news/secadv/20210325.txt">https://www.openssl.org/news/secadv/20210325.txt</a></p>
<p>Impacts:</p>
<ul>
<li>All versions of the 15.x, 14.x, 12.x and 10.x releases lines</li>
</ul>
<h3 id="header-npm-upgrade-update-y18n-to-fix-prototype-pollution-high-cve-2020-7774">npm upgrade - Update y18n to fix Prototype-Pollution (High) (CVE-2020-7774)<a id="npm-upgrade-update-y18n-to-fix-prototype-pollution-high-cve-2020-7774" class="anchor" href="#npm-upgrade-update-y18n-to-fix-prototype-pollution-high-cve-2020-7774" aria-labelledby="header-npm-upgrade-update-y18n-to-fix-prototype-pollution-high-cve-2020-7774"></a></h3><p>This is a vulnerability in the y18n npm module which may be exploited by prototype pollution.
You can read more about it in
<a href="https://github.com/advisories/GHSA-c4w7-xm78-47vh">https://github.com/advisories/GHSA-c4w7-xm78-47vh</a></p>
<p>Impacts:</p>
<ul>
<li>All versions of the 14.x, 12.x and 10.x releases lines</li>
</ul>
<h2 id="header-downloads-and-release-details">Downloads and release details<a id="downloads-and-release-details" class="anchor" href="#downloads-and-release-details" aria-labelledby="header-downloads-and-release-details"></a></h2><ul>
<li><a href="https://nodejs.org/en/blog/release/v10.24.1/">Node.js v10.24.1 (LTS)</a></li>
<li><a href="https://nodejs.org/en/blog/release/v12.22.1/">Node.js v12.22.1 (LTS)</a></li>
<li><a href="https://nodejs.org/en/blog/release/v14.16.1/">Node.js v14.16.1 (LTS)</a></li>
<li><a href="https://nodejs.org/en/blog/release/v15.14.0/">Node.js v15.14.0 (Current)</a></li>
</ul>
]]></description><link>https://nodejs.org/en/blog/vulnerability/april-2021-security-releases</link><guid isPermaLink="true">https://nodejs.org/en/blog/vulnerability/april-2021-security-releases</guid><dc:creator><![CDATA[Daniel Bevenius]]></dc:creator><pubDate>Tue, 06 Apr 2021 20:51:00 GMT</pubDate></item><item><title><![CDATA[February 2021 Security Releases]]></title><description><![CDATA[<h2 id="header-update-23-feb-2021-security-releases-available"><em>(Update 23-Feb-2021)</em> Security releases available<a id="update-23-feb-2021-security-releases-available" class="anchor" href="#update-23-feb-2021-security-releases-available" aria-labelledby="header-update-23-feb-2021-security-releases-available"></a></h2><p>Updates are now available for v10.x, v12.x, v14.x and v15.x Node.js release lines for the following issues.</p>
<h3 id="header-http2-unknownprotocol-cause-denial-of-service-by-resource-exhaustion-critical-cve-2021-22883">HTTP2 &#39;unknownProtocol&#39; cause Denial of Service by resource exhaustion (Critical) (CVE-2021-22883)<a id="http2-unknownprotocol-cause-denial-of-service-by-resource-exhaustion-critical-cve-2021-22883" class="anchor" href="#http2-unknownprotocol-cause-denial-of-service-by-resource-exhaustion-critical-cve-2021-22883" aria-labelledby="header-http2-unknownprotocol-cause-denial-of-service-by-resource-exhaustion-critical-cve-2021-22883"></a></h3><p>Affected Node.js versions are vulnerable to denial of service attacks when too many connection attempts with an &#39;unknownProtocol&#39; are established. This leads to a leak of file descriptors. If a file descriptor limit is configured on the system, then the server is unable to accept new connections and prevent the process also from opening, e.g. a file. If no file descriptor limit is configured, then this lead to an excessive memory usage and cause the system to run out of memory.</p>
<p>Impacts:</p>
<ul>
<li>All versions of the 15.x, 14.x, 12.x and 10.x releases lines</li>
</ul>
<p>Thank you to OMICRON electronics for reporting this vulnerability.</p>
<h3 id="header-dns-rebinding-in-inspect-cve-2021-22884">DNS rebinding in --inspect (CVE-2021-22884)<a id="dns-rebinding-in-inspect-cve-2021-22884" class="anchor" href="#dns-rebinding-in-inspect-cve-2021-22884" aria-labelledby="header-dns-rebinding-in-inspect-cve-2021-22884"></a></h3><p>Affected Node.js versions are vulnerable to a DNS rebinding attack when the whitelist includes “localhost6”. When “localhost6” is not present in /etc/hosts, it is just an ordinary domain that is resolved via DNS, i.e., over network. If the attacker controls the victim&#39;s DNS server or can spoof its responses, the DNS rebinding protection can be bypassed by using the “localhost6” domain. As long as the attacker uses the “localhost6” domain, they can still apply the attack described in CVE-2018-7160.</p>
<p>Impacts:</p>
<ul>
<li>All versions of the 15.x, 14.x, 12.x and 10.x releases lines</li>
</ul>
<p>Thank you to Vít Šesták for reporting this vulnerability</p>
<h3 id="header-openssl-integer-overflow-in-cipherupdate-cve-2021-23840">OpenSSL - Integer overflow in CipherUpdate (CVE-2021-23840)<a id="openssl-integer-overflow-in-cipherupdate-cve-2021-23840" class="anchor" href="#openssl-integer-overflow-in-cipherupdate-cve-2021-23840" aria-labelledby="header-openssl-integer-overflow-in-cipherupdate-cve-2021-23840"></a></h3><p>This is a vulnerability in OpenSSL which may be exploited through Node.js. You can read more about it in
<a href="https://www.openssl.org/news/secadv/20210216.txt">https://www.openssl.org/news/secadv/20210216.txt</a></p>
<p>Impacts:</p>
<ul>
<li>All versions of the 15.x, 14.x, 12.x and 10.x releases lines</li>
</ul>
<h2 id="header-downloads-and-release-details">Downloads and release details<a id="downloads-and-release-details" class="anchor" href="#downloads-and-release-details" aria-labelledby="header-downloads-and-release-details"></a></h2><ul>
<li><a href="https://nodejs.org/en/blog/release/v10.24.0/">Node.js v10.24.0 (LTS)</a></li>
<li><a href="https://nodejs.org/en/blog/release/v12.21.0/">Node.js v12.21.0 (LTS)</a></li>
<li><a href="https://nodejs.org/en/blog/release/v14.16.0/">Node.js v14.16.0 (LTS)</a></li>
<li><a href="https://nodejs.org/en/blog/release/v15.10.0/">Node.js v15.10.0 (Current)</a></li>
</ul>
]]></description><link>https://nodejs.org/en/blog/vulnerability/february-2021-security-releases</link><guid isPermaLink="true">https://nodejs.org/en/blog/vulnerability/february-2021-security-releases</guid><dc:creator><![CDATA[Daniel Bevenius]]></dc:creator><pubDate>Tue, 23 Feb 2021 13:30:00 GMT</pubDate></item><item><title><![CDATA[January 2021 Security Releases]]></title><description><![CDATA[<h2 id="header-update-4-jan-2021-security-releases-available"><em>(Update 4-Jan-2021)</em> Security releases available<a id="update-4-jan-2021-security-releases-available" class="anchor" href="#update-4-jan-2021-security-releases-available" aria-labelledby="header-update-4-jan-2021-security-releases-available"></a></h2><p>Updates are now available for v10,x, v12.x, v14.x and v15.x Node.js release lines for the following issues.</p>
<p>In addition to the vulnerabilities listed below, these releases also include an update to npm in order to resolve an issue that was reported against npm by security scanners even though it was not vulnerable.</p>
<h3 id="header-use-after-free-in-tlswrap-high-cve-2020-8265">use-after-free in TLSWrap (High) (CVE-2020-8265)<a id="use-after-free-in-tlswrap-high-cve-2020-8265" class="anchor" href="#use-after-free-in-tlswrap-high-cve-2020-8265" aria-labelledby="header-use-after-free-in-tlswrap-high-cve-2020-8265"></a></h3><p>Affected Node.js versions are vulnerable to a use-after-free bug in its TLS implementation.
When writing to a TLS enabled socket, node::StreamBase::Write calls node::TLSWrap::DoWrite
with a freshly allocated WriteWrap object as first argument. If the DoWrite method
does not return an error, this object is passed back to the caller as part of a
StreamWriteResult structure. This may be exploited to corrupt memory leading to a Denial of Service or potentially other exploits.</p>
<p>Impacts:</p>
<ul>
<li>All versions of the 15.x, 14.x, 12.x and 10.x releases lines</li>
</ul>
<p>Thank you to Felix Wilhelm from Google Project Zero for reporting this vulnerability.</p>
<h3 id="header-http-request-smuggling-in-nodejs-low-cve-2020-8287">HTTP Request Smuggling in nodejs (Low) (CVE-2020-8287)<a id="http-request-smuggling-in-nodejs-low-cve-2020-8287" class="anchor" href="#http-request-smuggling-in-nodejs-low-cve-2020-8287" aria-labelledby="header-http-request-smuggling-in-nodejs-low-cve-2020-8287"></a></h3><p>Affected versions of Node.js allow two copies of a header field in a http request. For example, two Transfer-Encoding header fields. In this case Node.js identifies the first header field and ignores the second. This can lead to HTTP Request Smuggling (<a href="https://cwe.mitre.org/data/definitions/444.html">https://cwe.mitre.org/data/definitions/444.html</a>).</p>
<p>Impacts:</p>
<ul>
<li>All versions of the 15.x, 14.x, 12.x and 10.x releases lines</li>
</ul>
<p>Thank you to niubl who works at TSRC(Tencent Security Response Center) for reporting this vulnerability</p>
<h3 id="header-openssl-edipartyname-null-pointer-de-reference-cve-2020-1971">OpenSSL - EDIPARTYNAME NULL pointer de-reference (CVE-2020-1971)<a id="openssl-edipartyname-null-pointer-de-reference-cve-2020-1971" class="anchor" href="#openssl-edipartyname-null-pointer-de-reference-cve-2020-1971" aria-labelledby="header-openssl-edipartyname-null-pointer-de-reference-cve-2020-1971"></a></h3><p>This is a vulnerability in OpenSSL which may be exploited through Node.js. You can read more about it in
<a href="https://www.openssl.org/news/secadv/20201208.txt">https://www.openssl.org/news/secadv/20201208.txt</a></p>
<p>Impacts:</p>
<ul>
<li>All versions of the 14.x, 12.x and 10.x release lines</li>
<li>Versions of the 15.x line before 15.5.0 which included an update to the latest OpenSSL.</li>
</ul>
<h2 id="header-downloads-and-release-details">Downloads and release details<a id="downloads-and-release-details" class="anchor" href="#downloads-and-release-details" aria-labelledby="header-downloads-and-release-details"></a></h2><ul>
<li><a href="https://nodejs.org/en/blog/release/v10.23.1/">Node.js v10.23.1 (LTS)</a></li>
<li><a href="https://nodejs.org/en/blog/release/v12.20.1/">Node.js v12.20.1 (LTS)</a></li>
<li><a href="https://nodejs.org/en/blog/release/v14.15.4/">Node.js v14.15.4 (LTS)</a></li>
<li><a href="https://nodejs.org/en/blog/release/v15.5.1/">Node.js v15.5.1 (Current)</a></li>
</ul>
<hr>
<h2 id="header-summary">Summary<a id="summary" class="anchor" href="#summary" aria-labelledby="header-summary"></a></h2><p>The Node.js project will release new versions of all supported release lines on or shortly after Monday January 4th, 2021.
These releases will fix:</p>
<ul>
<li>Two high severity issues</li>
<li>One low severity issue</li>
</ul>
<h2 id="header-impact">Impact<a id="impact" class="anchor" href="#impact" aria-labelledby="header-impact"></a></h2><p>The 15.x release line of Node.js is vulnerable to two high severity issues and one low severity issue.</p>
<p>The 14.x release line of Node.js is vulnerable to two high severity issues and one low severity issue.</p>
<p>The 12.x release line of Node.js is vulnerable to two high severity issues and one low severity issue.</p>
<p>The 10.x release line of Node.js is vulnerable to two high severity issues and one low severity issue.</p>
<h2 id="header-release-timing">Release timing<a id="release-timing" class="anchor" href="#release-timing" aria-labelledby="header-release-timing"></a></h2><p>Releases will be available at, or shortly after, Monday January 4th, 2021</p>
<h2 id="header-contact-and-future-updates">Contact and future updates<a id="contact-and-future-updates" class="anchor" href="#contact-and-future-updates" aria-labelledby="header-contact-and-future-updates"></a></h2><p>The current Node.js security policy can be found at <a href="https://nodejs.org/en/security/">https://nodejs.org/en/security/</a>. Please follow the process outlined in <a href="https://github.com/nodejs/node/blob/master/SECURITY.md">https://github.com/nodejs/node/blob/master/SECURITY.md</a> if you wish to report a vulnerability in Node.js.</p>
<p>Subscribe to the low-volume announcement-only nodejs-sec mailing list at <a href="https://groups.google.com/forum/#!forum/nodejs-sec">https://groups.google.com/forum/#!forum/nodejs-sec</a> to stay up to date on security vulnerabilities and security-related releases of Node.js and the projects maintained in the nodejs GitHub organization.</p>
]]></description><link>https://nodejs.org/en/blog/vulnerability/january-2021-security-releases</link><guid isPermaLink="true">https://nodejs.org/en/blog/vulnerability/january-2021-security-releases</guid><dc:creator><![CDATA[Michael Dawson]]></dc:creator><pubDate>Mon, 04 Jan 2021 19:30:00 GMT</pubDate></item><item><title><![CDATA[November 2020 Security Releases]]></title><description><![CDATA[<h2 id="header-update-16-nov-2020-security-releases-available"><em>(Update 16-Nov-2020)</em> Security releases available<a id="update-16-nov-2020-security-releases-available" class="anchor" href="#update-16-nov-2020-security-releases-available" aria-labelledby="header-update-16-nov-2020-security-releases-available"></a></h2><p>Updates are now available for v12.x, v14.x and v15.x Node.js release lines for the following issues.</p>
<h3 id="header-denial-of-service-through-dns-request-cve-2020-8277">Denial of Service through DNS request (CVE-2020-8277)<a id="denial-of-service-through-dns-request-cve-2020-8277" class="anchor" href="#denial-of-service-through-dns-request-cve-2020-8277" aria-labelledby="header-denial-of-service-through-dns-request-cve-2020-8277"></a></h3><p>A Node.js application that allows an attacker to trigger a DNS request for a host of their choice could trigger a Denial of service by getting the application to resolve a DNS record with a larger number of responses.</p>
<p>Impacts:</p>
<ul>
<li>Versions 12.16.3 and higher on the 12.x release line</li>
<li>Versions 14.13.0 and higher on the 14.x release line</li>
<li>All versions of the 15.x release line</li>
</ul>
<h2 id="header-downloads-and-release-details">Downloads and release details<a id="downloads-and-release-details" class="anchor" href="#downloads-and-release-details" aria-labelledby="header-downloads-and-release-details"></a></h2><ul>
<li><a href="https://nodejs.org/en/blog/release/v12.19.1/">Node.js v12.19.1 (LTS)</a></li>
<li><a href="https://nodejs.org/en/blog/release/v14.15.1/">Node.js v14.15.1 (LTS)</a></li>
<li><a href="https://nodejs.org/en/blog/release/v15.2.1/">Node.js v15.2.1 (Current)</a></li>
</ul>
<hr>
<h2 id="header-summary">Summary<a id="summary" class="anchor" href="#summary" aria-labelledby="header-summary"></a></h2><p>The Node.js project will release new versions of 15.x, 14.x and 12.x on or shortly after Monday, November 16th, 2020.
These releases will fix:</p>
<ul>
<li>One high severity issue</li>
</ul>
<h2 id="header-impact">Impact<a id="impact" class="anchor" href="#impact" aria-labelledby="header-impact"></a></h2><p>The 15.x release line of Node.js is vulnerable to one high severity issue.
The 14.x release line of Node.js is vulnerable to one high severity issue.
The 12.x release line of Node.js is vulnerable to one high severity issue.</p>
<h2 id="header-release-timing">Release timing<a id="release-timing" class="anchor" href="#release-timing" aria-labelledby="header-release-timing"></a></h2><p>Releases will be available at, or shortly after, Monday, November 16th, 2020</p>
<h2 id="header-contact-and-future-updates">Contact and future updates<a id="contact-and-future-updates" class="anchor" href="#contact-and-future-updates" aria-labelledby="header-contact-and-future-updates"></a></h2><p>The current Node.js security policy can be found at <a href="https://nodejs.org/en/security/">https://nodejs.org/en/security/</a>. Please follow the process outlined in <a href="https://github.com/nodejs/node/blob/master/SECURITY.md">https://github.com/nodejs/node/blob/master/SECURITY.md</a> if you wish to report a vulnerability in Node.js.</p>
<p>Subscribe to the low-volume announcement-only nodejs-sec mailing list at <a href="https://groups.google.com/forum/#!forum/nodejs-sec">https://groups.google.com/forum/#!forum/nodejs-sec</a> to stay up to date on security vulnerabilities and security-related releases of Node.js and the projects maintained in the nodejs GitHub organization.</p>
]]></description><link>https://nodejs.org/en/blog/vulnerability/november-2020-security-releases</link><guid isPermaLink="true">https://nodejs.org/en/blog/vulnerability/november-2020-security-releases</guid><dc:creator><![CDATA[Michael Dawson]]></dc:creator><pubDate>Mon, 16 Nov 2020 16:00:00 GMT</pubDate></item><item><title><![CDATA[September 2020 Security Releases]]></title><description><![CDATA[<h2 id="header-update-15-sept-2020-security-releases-available"><em>(Update 15-Sept-2020)</em> Security releases available<a id="update-15-sept-2020-security-releases-available" class="anchor" href="#update-15-sept-2020-security-releases-available" aria-labelledby="header-update-15-sept-2020-security-releases-available"></a></h2><p>Updates are now available for v10,x, v12.x and v14.x Node.js release lines for the following issues.</p>
<h3 id="header-http-request-smuggling-due-to-cr-to-hyphen-conversion-high-cve-2020-8201">HTTP Request Smuggling due to CR-to-Hyphen conversion (High) (CVE-2020-8201)<a id="http-request-smuggling-due-to-cr-to-hyphen-conversion-high-cve-2020-8201" class="anchor" href="#http-request-smuggling-due-to-cr-to-hyphen-conversion-high-cve-2020-8201" aria-labelledby="header-http-request-smuggling-due-to-cr-to-hyphen-conversion-high-cve-2020-8201"></a></h3><p>Affected Node.js versions converted carriage returns in HTTP request headers to a hyphen before parsing. This can lead to HTTP Request Smuggling as it is a non-standard interpretation of the header.</p>
<p>Impacts:</p>
<ul>
<li>All versions of the 14.x and 12.x releases line</li>
</ul>
<p>Thank you to Amit Klein who works at Safebreach for reporting this vulnerability.</p>
<h3 id="header-denial-of-service-by-resource-exhaustion-cwe-400-due-to-unfinished-http-1-1-requests-critical-cve-2020-8251">Denial of Service by resource exhaustion CWE-400 due to unfinished HTTP/1.1 requests (Critical) (CVE-2020-8251)<a id="denial-of-service-by-resource-exhaustion-cwe-400-due-to-unfinished-http-1-1-requests-critical-cve-2020-8251" class="anchor" href="#denial-of-service-by-resource-exhaustion-cwe-400-due-to-unfinished-http-1-1-requests-critical-cve-2020-8251" aria-labelledby="header-denial-of-service-by-resource-exhaustion-cwe-400-due-to-unfinished-http-1-1-requests-critical-cve-2020-8251"></a></h3><p>Node.js is vulnerable to HTTP denial of service (DOS) attacks based on delayed requests submission which can make the server unable to accept new connections. The fix a new http.Server option called requestTimeout
with a default value of 0 which means it is disabled by default. This should be set when Node.js is used as an edge server, for more details refer to the documentation.</p>
<p>Impacts:</p>
<ul>
<li>All versions of the 14.x release line</li>
</ul>
<p>Thank you to Paolo Insogna and Matteo Collina who work at NearFom for reporting and fixing this vulnerability.</p>
<h3 id="header-fs-realpath-native-may-cause-buffer-overflow-medium-cve-2020-8252">fs.realpath.native may cause buffer overflow (Medium) (CVE-2020-8252)<a id="fs-realpath-native-may-cause-buffer-overflow-medium-cve-2020-8252" class="anchor" href="#fs-realpath-native-may-cause-buffer-overflow-medium-cve-2020-8252" aria-labelledby="header-fs-realpath-native-may-cause-buffer-overflow-medium-cve-2020-8252"></a></h3><p>libuv&#39;s realpath implementation incorrectly determined the buffer size which can result in a buffer overflow if the resolved path is longer than 256 bytes.</p>
<p>Impacts:</p>
<ul>
<li>All versions of the 10.x release line</li>
<li>All versions of the 12.x release line</li>
<li>All versions of the 14.x release line before 14.9.0</li>
</ul>
<p>Thank you Xiaoyi Shi who works at Tencent for reporting this vulnerability.</p>
<h2 id="header-downloads-and-release-details">Downloads and release details<a id="downloads-and-release-details" class="anchor" href="#downloads-and-release-details" aria-labelledby="header-downloads-and-release-details"></a></h2><ul>
<li><a href="https://nodejs.org/en/blog/release/v10.22.1/">Node.js v10.22.1 (LTS)</a></li>
<li><a href="https://nodejs.org/en/blog/release/v12.18.4/">Node.js v12.18.4 (LTS)</a></li>
<li><a href="https://nodejs.org/en/blog/release/v14.11.0/">Node.js v14.11.0 (Current)</a></li>
</ul>
<hr>
<h2 id="header-summary">Summary<a id="summary" class="anchor" href="#summary" aria-labelledby="header-summary"></a></h2><p>The Node.js project will release new versions of all supported release lines on or shortly after Tuesday, September 15, 2020.
These releases will fix</p>
<ul>
<li>One critical severity issue</li>
<li>One high severity issue</li>
<li>One medium severity issue</li>
</ul>
<h2 id="header-impact">Impact<a id="impact" class="anchor" href="#impact" aria-labelledby="header-impact"></a></h2><p>The 14.x release line of Node.js is vulnerable to one critical severity issue, one high severity issue and one medium severity issue.</p>
<p>The 12.x release line of Node.js is vulnerable to one high severity issue, and one medium severity issue.</p>
<p>10.x release line of Node.js is vulnerable to one medium severity issue.</p>
<h2 id="header-release-timing">Release timing<a id="release-timing" class="anchor" href="#release-timing" aria-labelledby="header-release-timing"></a></h2><p>Releases will be available at, or shortly after, Tuesday, September 15th, 2020.</p>
<h2 id="header-contact-and-future-updates">Contact and future updates<a id="contact-and-future-updates" class="anchor" href="#contact-and-future-updates" aria-labelledby="header-contact-and-future-updates"></a></h2><p>The current Node.js security policy can be found at <a href="https://nodejs.org/en/security/">https://nodejs.org/en/security/</a>. Please follow the process outlined in <a href="https://github.com/nodejs/node/blob/master/SECURITY.md">https://github.com/nodejs/node/blob/master/SECURITY.md</a> if you wish to report a vulnerability in Node.js.</p>
<p>Subscribe to the low-volume announcement-only nodejs-sec mailing list at <a href="https://groups.google.com/forum/#!forum/nodejs-sec">https://groups.google.com/forum/#!forum/nodejs-sec</a> to stay up to date on security vulnerabilities and security-related releases of Node.js and the projects maintained in the nodejs GitHub organization.</p>
]]></description><link>https://nodejs.org/en/blog/vulnerability/september-2020-security-releases</link><guid isPermaLink="true">https://nodejs.org/en/blog/vulnerability/september-2020-security-releases</guid><dc:creator><![CDATA[Michael Dawson]]></dc:creator><pubDate>Tue, 15 Sep 2020 21:50:00 GMT</pubDate></item><item><title><![CDATA[June 2020 Security Releases]]></title><description><![CDATA[<h2 id="header-update-2-june-2020-security-releases-available"><em>(Update 2-June-2020)</em> Security releases available<a id="update-2-june-2020-security-releases-available" class="anchor" href="#update-2-june-2020-security-releases-available" aria-labelledby="header-update-2-june-2020-security-releases-available"></a></h2><p>Updates are now available for all supported Node.js release lines for the following
issues.</p>
<h3 id="header-tls-session-reuse-can-lead-to-host-certificate-verification-bypass-high-cve-2020-8172">TLS session reuse can lead to host certificate verification bypass (High) (CVE-2020-8172)<a id="tls-session-reuse-can-lead-to-host-certificate-verification-bypass-high-cve-2020-8172" class="anchor" href="#tls-session-reuse-can-lead-to-host-certificate-verification-bypass-high-cve-2020-8172" aria-labelledby="header-tls-session-reuse-can-lead-to-host-certificate-verification-bypass-high-cve-2020-8172"></a></h3><p>The &#39;session&#39; event could be emitted before the &#39;secureConnect&#39; event. It should not be, because the connection may fail to be authorized. If it was saved an authorized connection could be established later with the session ticket. Note that the <code>https</code> agent caches sessions, so is vulnerable to this.</p>
<p>The &#39;session&#39; event will now only be emitted after the &#39;secureConnect&#39; event, and only for authorized connections.</p>
<p>Affects Node.js 12.x, and 14.x. Does <em>not</em> affect Node.js 10.x.</p>
<h3 id="header-http-2-large-settings-frame-dos-low-cve-2020-11080">HTTP/2 Large Settings Frame DoS (Low) (CVE-2020-11080)<a id="http-2-large-settings-frame-dos-low-cve-2020-11080" class="anchor" href="#http-2-large-settings-frame-dos-low-cve-2020-11080" aria-labelledby="header-http-2-large-settings-frame-dos-low-cve-2020-11080"></a></h3><p>Receiving unreasonably large HTTP/2 SETTINGS frames can consume 100% CPU to process all the settings, blocking all other activities until complete.</p>
<p>The HTTP/2 session frame is limited to 32 settings by default. This can be configured if necessary using the <code>maxSettings</code> option.</p>
<p>Thank you to Jordan Zebor and Adam Cabrey of F5 Networks for reporting this.</p>
<p>Affects Node.js 10.x, 12.x, and 14.x.</p>
<h3 id="header-napi_get_value_string_-allows-various-kinds-of-memory-corruption-high-cve-2020-8174"><code>napi_get_value_string_*()</code> allows various kinds of memory corruption (High) (CVE-2020-8174)<a id="napi_get_value_string_-allows-various-kinds-of-memory-corruption-high-cve-2020-8174" class="anchor" href="#napi_get_value_string_-allows-various-kinds-of-memory-corruption-high-cve-2020-8174" aria-labelledby="header-napi_get_value_string_-allows-various-kinds-of-memory-corruption-high-cve-2020-8174"></a></h3><p>Calling <code>napi_get_value_string_latin1()</code>, <code>napi_get_value_string_utf8()</code>, or <code>napi_get_value_string_utf16()</code> with a non-NULL <code>buf</code>, and a <code>bufsize</code> of <code>0</code> will cause the entire string value to be written to <code>buf</code>, probably overrunning the length of the buffer.</p>
<p>A exploit has not been reported and it may be difficult but the following is suggested:</p>
<ul>
<li>All users of LTS Node.js versions should update to the versions announced in this security post. This will address the issue for any non pre-built add-on.</li>
<li>Maintainers who support EOL Node.js versions and/or build against a version of Node.js that did not support N-API internally should update to use the new versions of node-addon-api 1.x and 2.x that will be released soon after this announcement.</li>
</ul>
<p>Affects Node.js 10.x, 12.x, and 14.x.</p>
<p>Affects <a href="https://www.npmjs.com/package/node-addon-api">https://www.npmjs.com/package/node-addon-api</a> 1.x, 2.x when a native add-on is/was built using a version of Node.js that did not support N-API internally.  The <a href="https://github.com/nodejs/node/blob/master/doc/api/n-api.md#n-api-version-matrix">N-API version matrix</a> shows which versions of Node.js in which this support was added.</p>
<h3 id="header-icu-20958-prevent-segv_maperr-in-append-high-cve-2020-10531"><code>ICU-20958 Prevent SEGV_MAPERR in append</code> (High) (CVE-2020-10531)<a id="icu-20958-prevent-segv_maperr-in-append-high-cve-2020-10531" class="anchor" href="#icu-20958-prevent-segv_maperr-in-append-high-cve-2020-10531" aria-labelledby="header-icu-20958-prevent-segv_maperr-in-append-high-cve-2020-10531"></a></h3><p>An issue was discovered in International Components for Unicode (ICU) for C/C++
through 66.1. An integer overflow, leading to a heap-based buffer overflow,
exists in the UnicodeString::doAppend() function in common/unistr.cpp.</p>
<p>Fix was applied to 10.x in an abundance of caution, even though there is no
known way to trigger the overflow in 10.x.</p>
<p>Does not affect 12.x or 14.x, they do not include an affected version of ICU.</p>
<h2 id="header-downloads-release-details">Downloads &amp; release details<a id="downloads-release-details" class="anchor" href="#downloads-release-details" aria-labelledby="header-downloads-release-details"></a></h2><ul>
<li><a href="https://nodejs.org/en/blog/release/v10.21.0/">Node.js v10.21.0 (LTS)</a></li>
<li><a href="https://nodejs.org/en/blog/release/v12.18.0/">Node.js v12.18.0 (LTS)</a></li>
<li><a href="https://nodejs.org/en/blog/release/v14.4.0/">Node.js v14.4.0 (Current)</a></li>
</ul>
<hr>
<h2 id="header-summary">Summary<a id="summary" class="anchor" href="#summary" aria-labelledby="header-summary"></a></h2><p>The Node.js project will release security updates to all supported release lines on or shortly after Tuesday, June 2nd, 2020.</p>
<p>The highest severity fix will be &quot;High&quot;.</p>
<h2 id="header-impact">Impact<a id="impact" class="anchor" href="#impact" aria-labelledby="header-impact"></a></h2><p>All supported versions (10.x, 12.x, and 14.x) of Node.js are vulnerable. Note that 13.x will be end-of-life on June 1st, before the security release date, and according to policy it will <strong><em>not</em></strong> receive any more updates.</p>
<h2 id="header-release-timing">Release timing<a id="release-timing" class="anchor" href="#release-timing" aria-labelledby="header-release-timing"></a></h2><p>Releases will be available on or shortly after Tuesday, June 2nd, 2020.</p>
<h2 id="header-contact-and-future-updates">Contact and future updates<a id="contact-and-future-updates" class="anchor" href="#contact-and-future-updates" aria-labelledby="header-contact-and-future-updates"></a></h2><p>The current Node.js security policy can be found at <a href="https://nodejs.org/en/security/">https://nodejs.org/en/security/</a>. Please follow the process outlined in <a href="https://github.com/nodejs/node/blob/master/SECURITY.md">https://github.com/nodejs/node/blob/master/SECURITY.md</a> if you wish to report a vulnerability in Node.js.</p>
<p>Subscribe to the low-volume announcement-only nodejs-sec mailing list at <a href="https://groups.google.com/forum/#!forum/nodejs-sec">https://groups.google.com/forum/#!forum/nodejs-sec</a> to stay up to date on security vulnerabilities and security-related releases of Node.js and the projects maintained in the nodejs GitHub organization.</p>
]]></description><link>https://nodejs.org/en/blog/vulnerability/june-2020-security-releases</link><guid isPermaLink="true">https://nodejs.org/en/blog/vulnerability/june-2020-security-releases</guid><dc:creator><![CDATA[Sam Roberts]]></dc:creator><pubDate>Tue, 02 Jun 2020 12:00:00 GMT</pubDate></item><item><title><![CDATA[OpenSSL security releases do not require Node.js security releases]]></title><description><![CDATA[<h3 id="header-update">Update<a id="update" class="anchor" href="#update" aria-labelledby="header-update"></a></h3><p>The OpenSSL project has released a description of the issue fixed in the
OpenSSL 1.1.1g update. It only affects a function which is <em>not called</em>
by Node.js (or its dependencies), and as such, does not affect Node.js.</p>
<p>No Node.js security releases are required.</p>
<p>For more information, see the OpenSSL
<a href="https://www.openssl.org/news/secadv/20200421.txt">announcement</a>.</p>
<p>The previous Node.js announcement can be found below.</p>
<h3 id="header-summary">Summary<a id="summary" class="anchor" href="#summary" aria-labelledby="header-summary"></a></h3><p>The Node.js project may be releasing new versions across all of its supported
release lines early next week to incorporate upstream patches from OpenSSL.
Please read on for full details.</p>
<h3 id="header-openssl">OpenSSL<a id="openssl" class="anchor" href="#openssl" aria-labelledby="header-openssl"></a></h3><p>The OpenSSL project
<a href="https://mta.openssl.org/pipermail/openssl-announce/2020-April/000170.html">announced</a>
this week that they will be releasing version 1.1.1g on the 21st of
April. The highest severity issue that will be fixed in the release
is &quot;HIGH&quot; severity under their
<a href="https://www.openssl.org/policies/secpolicy.html">security policy</a>,
meaning they are:</p>
<blockquote>
<p>... issues that are of a lower risk than critical, perhaps due to affecting
less common configurations, or which are less likely to be exploitable.</p>
</blockquote>
<p>All supported versions of Node.js use OpenSSL v1.1.1, therefore all active
release lines are impacted by this update: v10.x, v12.x, v13.x, and v14.x (
14.0.0 is to be released on the 21st of April, by coincidence).</p>
<p>At this stage, due to embargo, the exact nature of these defects is uncertain
as well as the impact they will have on Node.js users.</p>
<p>After assessing the impact on Node.js, it will be decided whether the issues
fixed require immediate security releases of Node.js, or whether they can be
included in the normally scheduled updates.</p>
<p>Please monitor the <strong>nodejs-sec</strong> Google Group for updates, including a
decision within 24 hours after the OpenSSL release regarding release timing,
and full details of the defects upon eventual release:
<a href="https://groups.google.com/forum/#!forum/nodejs-sec">https://groups.google.com/forum/#!forum/nodejs-sec</a></p>
<h3 id="header-contact-and-future-updates">Contact and future updates<a id="contact-and-future-updates" class="anchor" href="#contact-and-future-updates" aria-labelledby="header-contact-and-future-updates"></a></h3><p>The current Node.js security policy can be found at <a href="https://nodejs.org/en/security/">https://nodejs.org/en/security/</a>,
including information on how to report a vulnerability in Node.js.</p>
<p>Subscribe to the low-volume announcement-only <strong>nodejs-sec</strong> mailing list at
<a href="https://groups.google.com/forum/#!forum/nodejs-sec">https://groups.google.com/forum/#!forum/nodejs-sec</a> to stay up to date on
security vulnerabilities and security-related releases of Node.js and the
projects maintained in the
<a href="https://github.com/nodejs">nodejs GitHub organization</a>.</p>
]]></description><link>https://nodejs.org/en/blog/vulnerability/april-2020-openssl-updates</link><guid isPermaLink="true">https://nodejs.org/en/blog/vulnerability/april-2020-openssl-updates</guid><dc:creator><![CDATA[Sam Roberts]]></dc:creator><pubDate>Tue, 21 Apr 2020 12:00:00 GMT</pubDate></item><item><title><![CDATA[February 2020 Security Releases]]></title><description><![CDATA[<h2 id="header-update-6-february-2020-security-releases-available"><em>(Update 6-February-2020)</em> Security releases available<a id="update-6-february-2020-security-releases-available" class="anchor" href="#update-6-february-2020-security-releases-available" aria-labelledby="header-update-6-february-2020-security-releases-available"></a></h2><p>Updates are now available for all active Node.js release lines for the following issues.</p>
<h3 id="header-http-request-smuggling-using-malformed-transfer-encoding-header-critical-cve-2019-15605">HTTP request smuggling using malformed Transfer-Encoding header (Critical) (CVE-2019-15605)<a id="http-request-smuggling-using-malformed-transfer-encoding-header-critical-cve-2019-15605" class="anchor" href="#http-request-smuggling-using-malformed-transfer-encoding-header-critical-cve-2019-15605" aria-labelledby="header-http-request-smuggling-using-malformed-transfer-encoding-header-critical-cve-2019-15605"></a></h3><p>Affected Node.js versions can be exploited to perform HTTP desync attacks and deliver malicious payloads to unsuspecting users. The payloads can be crafted by an attacker to hijack user sessions, poison cookies, perform clickjacking, and a multitude of other attacks depending on the architecture of the underlying system.</p>
<p>Reported by Ethan Rubinson, a software engineer at eBay.</p>
<h3 id="header-http-header-values-do-not-have-trailing-ows-trimmed-high-cve-2019-15606">HTTP header values do not have trailing OWS trimmed (High) (CVE-2019-15606)<a id="http-header-values-do-not-have-trailing-ows-trimmed-high-cve-2019-15606" class="anchor" href="#http-header-values-do-not-have-trailing-ows-trimmed-high-cve-2019-15606" aria-labelledby="header-http-header-values-do-not-have-trailing-ows-trimmed-high-cve-2019-15606"></a></h3><p>Optional whitespace should be trimmed from HTTP header values. Its presence may allow attackers to bypass security checks based on HTTP header values.</p>
<p>Reported by Alyssa Wilk from Google.</p>
<h3 id="header-remotely-trigger-an-assertion-on-a-tls-server-with-a-malformed-certificate-string-high-cve-2019-15604">Remotely trigger an assertion on a TLS server with a malformed certificate string (High) (CVE-2019-15604)<a id="remotely-trigger-an-assertion-on-a-tls-server-with-a-malformed-certificate-string-high-cve-2019-15604" class="anchor" href="#remotely-trigger-an-assertion-on-a-tls-server-with-a-malformed-certificate-string-high-cve-2019-15604" aria-labelledby="header-remotely-trigger-an-assertion-on-a-tls-server-with-a-malformed-certificate-string-high-cve-2019-15604"></a></h3><p>Connecting to a NodeJS TLS server with a client certificate that has a type 19 string in its subjectAltName will crash the TLS server if it tries to read the peer certificate.</p>
<p>Reported by Rogier Schouten and Melvin Groenhoff.</p>
<h2 id="header-strict-http-header-parsing-none">Strict HTTP header parsing (None)<a id="strict-http-header-parsing-none" class="anchor" href="#strict-http-header-parsing-none" aria-labelledby="header-strict-http-header-parsing-none"></a></h2><p>Increase the strictness of HTTP header parsing. There are no known vulnerabilities addressed, but lax HTTP parsing has historically been a source of problems. Some commonly used sites are known to generate invalid HTTP headers, a <code>--insecure-http-parser</code> CLI option or <code>insecureHTTPParser</code> http option can be used if necessary for interoperability, but is not recommended.</p>
<h2 id="header-downloads-release-details">Downloads &amp; release details<a id="downloads-release-details" class="anchor" href="#downloads-release-details" aria-labelledby="header-downloads-release-details"></a></h2><ul>
<li><a href="https://nodejs.org/en/blog/release/v10.19.0/">Node.js v10.19.0 (LTS)</a></li>
<li><a href="https://nodejs.org/en/blog/release/v12.15.0/">Node.js v12.15.0 (LTS)</a></li>
<li><a href="https://nodejs.org/en/blog/release/v13.8.0/">Node.js v13.8.0 (Current)</a></li>
</ul>
<hr>
<h2 id="header-summary">Summary<a id="summary" class="anchor" href="#summary" aria-labelledby="header-summary"></a></h2><p>The Node.js project will release new versions of all supported release lines on or shortly after Tuesday, February 4th, 2020.</p>
<p>One Critical severity and two High severity issues will be fixed. The release also includes stricter HTTP parsing.</p>
<h2 id="header-impact">Impact<a id="impact" class="anchor" href="#impact" aria-labelledby="header-impact"></a></h2><p>All supported versions (10.x, 12.x, and 13.x) of Node.js are vulnerable.</p>
<h2 id="header-release-timing">Release timing<a id="release-timing" class="anchor" href="#release-timing" aria-labelledby="header-release-timing"></a></h2><p>Releases will be available at, or shortly after, Tuesday, February 4th, 2020.</p>
<h2 id="header-contact-and-future-updates">Contact and future updates<a id="contact-and-future-updates" class="anchor" href="#contact-and-future-updates" aria-labelledby="header-contact-and-future-updates"></a></h2><p>The current Node.js security policy can be found at <a href="https://nodejs.org/en/security/">https://nodejs.org/en/security/</a>. Please follow the process outlined in <a href="https://github.com/nodejs/node/blob/master/SECURITY.md">https://github.com/nodejs/node/blob/master/SECURITY.md</a> if you wish to report a vulnerability in Node.js.</p>
<p>Subscribe to the low-volume announcement-only nodejs-sec mailing list at <a href="https://groups.google.com/forum/#!forum/nodejs-sec">https://groups.google.com/forum/#!forum/nodejs-sec</a> to stay up to date on security vulnerabilities and security-related releases of Node.js and the projects maintained in the nodejs GitHub organization.</p>
]]></description><link>https://nodejs.org/en/blog/vulnerability/february-2020-security-releases</link><guid isPermaLink="true">https://nodejs.org/en/blog/vulnerability/february-2020-security-releases</guid><dc:creator><![CDATA[Sam Roberts]]></dc:creator><pubDate>Thu, 06 Feb 2020 12:00:00 GMT</pubDate></item><item><title><![CDATA[December 2019 Security Releases]]></title><description><![CDATA[<h2 id="header-update-18-december-2019-releases-available"><em>(Update 18-December-2019)</em> Releases available<a id="update-18-december-2019-releases-available" class="anchor" href="#update-18-december-2019-releases-available" aria-labelledby="header-update-18-december-2019-releases-available"></a></h2><p>These releases update npm to v6.13.4 to address three vulnerabilities described below.</p>
<p>All current release lines were affected.</p>
<p>At this time, CVEs have been requested by npm, Inc. and are pending review. See <a href="https://twitter.com/ahmadnassri/status/1205132161961123841">https://twitter.com/ahmadnassri/status/1205132161961123841</a> for more information.</p>
<h3 id="header-global-node_modules-binary-overwrite">Global <code>node_modules</code> Binary Overwrite<a id="global-node_modules-binary-overwrite" class="anchor" href="#global-node_modules-binary-overwrite" aria-labelledby="header-global-node_modules-binary-overwrite"></a></h3><p>Versions of the npm CLI prior to 6.13.4 are vulnerable to a Global <code>node_modules</code> Binary Overwrite. It fails to prevent existing globally-installed binaries to be overwritten by other package installations.</p>
<p>For example, if a package was installed globally and created a <code>serve</code> binary, any subsequent installs of packages that also create a <code>serve</code> binary would overwrite the first binary. This will not overwrite system binaries but only binaries put into the global <code>node_modules</code> directory.</p>
<p>This behavior is still allowed in local installations and also through install scripts. This vulnerability bypasses a user using the <code>--ignore-scripts</code> install option.</p>
<ul>
<li><a href="https://www.npmjs.com/advisories/1437">https://www.npmjs.com/advisories/1437</a></li>
</ul>
<h3 id="header-symlink-reference-outside-of-node_modules">Symlink reference outside of <code>node_modules</code><a id="symlink-reference-outside-of-node_modules" class="anchor" href="#symlink-reference-outside-of-node_modules" aria-labelledby="header-symlink-reference-outside-of-node_modules"></a></h3><p>Versions of the npm CLI prior to 6.13.3 are vulnerable to a symlink reference outside of <code>node_modules</code>. It is possible for packages to create symlinks to files outside of the <code>node_modules</code> folder through the <code>bin</code> field upon installation. A properly constructed entry in the package.json <code>bin</code> field would allow a package publisher to create a symlink pointing to arbitrary files on a user’s system when the package is installed. Only files accessible by the user running the <code>npm install</code> are affected.</p>
<p>This behavior is still possible through install scripts. This vulnerability bypasses a user using the <code>--ignore-scripts</code> install option.</p>
<ul>
<li><a href="https://www.npmjs.com/advisories/1436">https://www.npmjs.com/advisories/1436</a></li>
</ul>
<h3 id="header-arbitrary-file-write">Arbitrary File Write<a id="arbitrary-file-write" class="anchor" href="#arbitrary-file-write" aria-labelledby="header-arbitrary-file-write"></a></h3><p>Versions of the npm CLI prior to 6.13.3 are vulnerable to an Arbitrary File Write. It fails to prevent access to folders outside of the intended <code>node_modules</code> folder through the <code>bin</code> field. A properly constructed entry in the <code>package.json</code> bin field would allow a package publisher to create files on a user&#39;s system when the package is installed. It is only possible to affect files that the user running <code>npm install</code> has access to and it is not possible to overwrite files that already exist on disk.</p>
<p>This behavior is still possible through install scripts. This vulnerability bypasses a user using the <code>--ignore-scripts</code> install option.</p>
<ul>
<li><a href="https://www.npmjs.com/advisories/1434">https://www.npmjs.com/advisories/1434</a></li>
</ul>
<h3 id="header-downloads">Downloads<a id="downloads" class="anchor" href="#downloads" aria-labelledby="header-downloads"></a></h3><ul>
<li><a href="https://nodejs.org/en/blog/release/v13.4.0/">Node.js v13.4.0</a></li>
<li><a href="https://nodejs.org/en/blog/release/v12.14.0/">Node.js v12.14.0</a></li>
<li><a href="https://nodejs.org/en/blog/release/v10.18.0/">Node.js v10.18.0</a></li>
<li><a href="https://nodejs.org/en/blog/release/v8.17.0/">Node.js v8.17.0</a></li>
</ul>
<p>Please note that this will be the final release of the v8.x line as support ends after December 31st, 2019.</p>
<hr>
<h2 id="header-summary">Summary<a id="summary" class="anchor" href="#summary" aria-labelledby="header-summary"></a></h2><p>The Node.js project will release new versions of all supported release lines on or shortly after Tuesday December 17, 2019 UTC. For versions 8, 10, and 12 the only update to the runtime in these releases will be an updated version of npm addressing the vulnerability announced in <a href="https://blog.npmjs.org/post/189618601100/binary-planting-with-the-npm-cli">https://blog.npmjs.org/post/189618601100/binary-planting-with-the-npm-cli</a>. Version 13, while still being a security release, will include all commits that were scheduled to be included in the originally scheduled release.</p>
<p>In the meantime, users should update to npm 6.13.4 by following the instructions provided in the npm advisory. As a general rule, avoid running npm in production environments.</p>
<h2 id="header-impact">Impact<a id="impact" class="anchor" href="#impact" aria-labelledby="header-impact"></a></h2><p>All versions of Node.js are vulnerable including the LTS and current releases: Node.js 8 (LTS &quot;Carbon&quot;), Node.js 10 (LTS &quot;Dubnium&quot;) , Node.js 12 (LTS &quot;Erbium&quot;), and Node.js 13.</p>
<h2 id="header-release-timing">Release timing<a id="release-timing" class="anchor" href="#release-timing" aria-labelledby="header-release-timing"></a></h2><p>Releases will be available at, or shortly after, Tuesday, December 17, 2019 UTC.</p>
<h2 id="header-contact-and-future-updates">Contact and future updates<a id="contact-and-future-updates" class="anchor" href="#contact-and-future-updates" aria-labelledby="header-contact-and-future-updates"></a></h2><p>The current Node.js security policy can be found at <a href="https://nodejs.org/en/security/">https://nodejs.org/en/security/</a>.  Please follow the process outlined in <a href="https://github.com/nodejs/node/blob/master/SECURITY.md">https://github.com/nodejs/node/blob/master/SECURITY.md</a> if you wish to report a vulnerability in Node.js.</p>
<p>Subscribe to the low-volume announcement-only nodejs-sec mailing list at <a href="https://groups.google.com/forum/#!forum/nodejs-sec">https://groups.google.com/forum/#!forum/nodejs-sec</a> to stay up to date on security vulnerabilities and security-related releases of Node.js and the projects maintained in the nodejs GitHub organization.</p>
]]></description><link>https://nodejs.org/en/blog/vulnerability/december-2019-security-releases</link><guid isPermaLink="true">https://nodejs.org/en/blog/vulnerability/december-2019-security-releases</guid><dc:creator><![CDATA[Michael Dawson, Sam Roberts]]></dc:creator><pubDate>Wed, 18 Dec 2019 00:23:00 GMT</pubDate></item><item><title><![CDATA[OpenSSL security releases do not require Node.js security releases]]></title><description><![CDATA[<h3 id="header-summary">Summary<a id="summary" class="anchor" href="#summary" aria-labelledby="header-summary"></a></h3><p>The OpenSSL Security releases of September 10th, 2019 do not affect Node.js.</p>
<h3 id="header-analysis">Analysis<a id="analysis" class="anchor" href="#analysis" aria-labelledby="header-analysis"></a></h3><p>Our assessment of the <a href="https://www.openssl.org/news/secadv/20190910.txt">security advisory</a> is:</p>
<ul>
<li><p>ECDSA remote timing attack (CVE-2019-1547)
Not affected. Node supports only named curves for ECDSA signing.</p>
</li>
<li><p>Fork Protection (CVE-2019-1549)
Not affected. Node.js always call <code>exec()</code> after <code>fork()</code> so will not
duplicate the PRNG state in the forked process.</p>
</li>
<li><p>Padding Oracle in <code>PKCS7_dataDecode</code> and <code>CMS_decrypt_set1_pkey</code> (CVE-2019-1563)
Not affected. Node does not support PCKS7 and CMS.</p>
</li>
</ul>
<p>Given this assessment, the OpenSSL updates will be treated as non-security
patch updates, and will come out in the regularly scheduled updates to
supported release lines.</p>
<h3 id="header-acknowledgements">Acknowledgements<a id="acknowledgements" class="anchor" href="#acknowledgements" aria-labelledby="header-acknowledgements"></a></h3><p>Thanks to <a href="https://github.com/shigeki">Shigeki Ohtsu</a> for his rapid analysis
of the OpenSSL security advisory.</p>
<h3 id="header-contact-and-future-updates">Contact and future updates<a id="contact-and-future-updates" class="anchor" href="#contact-and-future-updates" aria-labelledby="header-contact-and-future-updates"></a></h3><p>The current Node.js security policy can be found at <a href="https://nodejs.org/en/security/">https://nodejs.org/en/security/</a>,
including information on how to report a vulnerability in Node.js.</p>
<p>Subscribe to the low-volume announcement-only <strong>nodejs-sec</strong> mailing list at
<a href="https://groups.google.com/forum/#!forum/nodejs-sec">https://groups.google.com/forum/#!forum/nodejs-sec</a> to stay up to date on
security vulnerabilities and security-related releases of Node.js and the
projects maintained in the
<a href="https://github.com/nodejs">nodejs GitHub organization</a>.</p>
]]></description><link>https://nodejs.org/en/blog/vulnerability/september-2019-openssl-no-updates</link><guid isPermaLink="true">https://nodejs.org/en/blog/vulnerability/september-2019-openssl-no-updates</guid><dc:creator><![CDATA[Sam Roberts]]></dc:creator><pubDate>Thu, 12 Sep 2019 17:00:15 GMT</pubDate></item><item><title><![CDATA[OpenSSL security releases may require Node.js security releases]]></title><description><![CDATA[<h3 id="header-summary">Summary<a id="summary" class="anchor" href="#summary" aria-labelledby="header-summary"></a></h3><p>The Node.js project may be releasing new versions across all of its supported
release lines early next week to incorporate upstream patches from OpenSSL.
Please read on for full details.</p>
<h3 id="header-openssl">OpenSSL<a id="openssl" class="anchor" href="#openssl" aria-labelledby="header-openssl"></a></h3><p>The OpenSSL project
<a href="https://mta.openssl.org/pipermail/openssl-announce/2019-September/000156.html">announced</a>
this week that they will be releasing versions 1.0.2t and 1.1.1d on the 10th of
September, UTC. The releases will fix two security defects that are labelled
as &quot;LOW&quot; severity under their
<a href="https://www.openssl.org/policies/secpolicy.html">security policy</a>,
meaning they are:</p>
<blockquote>
<p>... issues such as those that only affect the openssl command line utility,
or unlikely configurations.</p>
</blockquote>
<p>Node.js v8.x use OpenSSL v1.0.2 and Node.js v10.x and v12.x both use OpenSSL
v1.1.1, therefore all active release lines are impacted by this update.</p>
<p>At this stage, due to embargo, the exact nature of these defects is uncertain
as well as the impact they will have on Node.js users.</p>
<p>After assessing the impact on Node.js, it will be decided whether the issues
fixed require immediate security releases of Node.js, or whether they can be
included in the normally scheduled updates.</p>
<p>Please monitor the <strong>nodejs-sec</strong> Google Group for updates, including a
decision within 24 hours after the OpenSSL release regarding release timing,
and full details of the defects upon eventual release:
<a href="https://groups.google.com/forum/#!forum/nodejs-sec">https://groups.google.com/forum/#!forum/nodejs-sec</a></p>
<h3 id="header-contact-and-future-updates">Contact and future updates<a id="contact-and-future-updates" class="anchor" href="#contact-and-future-updates" aria-labelledby="header-contact-and-future-updates"></a></h3><p>The current Node.js security policy can be found at <a href="https://nodejs.org/en/security/">https://nodejs.org/en/security/</a>,
including information on how to report a vulnerability in Node.js.</p>
<p>Subscribe to the low-volume announcement-only <strong>nodejs-sec</strong> mailing list at
<a href="https://groups.google.com/forum/#!forum/nodejs-sec">https://groups.google.com/forum/#!forum/nodejs-sec</a> to stay up to date on
security vulnerabilities and security-related releases of Node.js and the
projects maintained in the
<a href="https://github.com/nodejs">nodejs GitHub organization</a>.</p>
]]></description><link>https://nodejs.org/en/blog/vulnerability/september-2019-openssl-updates</link><guid isPermaLink="true">https://nodejs.org/en/blog/vulnerability/september-2019-openssl-updates</guid><dc:creator><![CDATA[Sam Roberts]]></dc:creator><pubDate>Thu, 05 Sep 2019 15:34:35 GMT</pubDate></item><item><title><![CDATA[August 2019 Security Releases]]></title><description><![CDATA[<p>Node.js, as well as many other implementations of HTTP/2, have been found
vulnerable to Denial of Service attacks. See
<a href="https://github.com/Netflix/security-bulletins/blob/master/advisories/third-party/2019-002.md">https://github.com/Netflix/security-bulletins/blob/master/advisories/third-party/2019-002.md</a>
for more information.</p>
<p>Updates are now available for all active Node.js release lines, including Linux
ARMv6 builds for Node.js 8.x (which had been delayed).</p>
<p>We recommend that all Node.js users upgrade to a version listed below as soon
as possible.</p>
<h2 id="header-downloads-release-details">Downloads &amp; release details<a id="downloads-release-details" class="anchor" href="#downloads-release-details" aria-labelledby="header-downloads-release-details"></a></h2><p>Downloads are available for the following versions. Details of code changes can
also be found on each release page.</p>
<ul>
<li>Node.js 8.16.1: <a href="https://nodejs.org/dist/latest-v8.x/">https://nodejs.org/dist/latest-v8.x/</a></li>
<li>Node.js 10.16.3: <a href="https://nodejs.org/dist/latest-v10.x/">https://nodejs.org/dist/latest-v10.x/</a></li>
<li>Node.js 12.8.1: <a href="https://nodejs.org/dist/latest-v12.x/">https://nodejs.org/dist/latest-v12.x/</a></li>
</ul>
<h2 id="header-vulnerabilities-fixed">Vulnerabilities Fixed<a id="vulnerabilities-fixed" class="anchor" href="#vulnerabilities-fixed" aria-labelledby="header-vulnerabilities-fixed"></a></h2><p><strong><em>Impact</em></strong>: All versions of Node.js 8 (LTS &quot;Carbon&quot;), Node.js 10 (LTS &quot;Dubnium&quot;), and Node.js 12 (Current) are vulnerable to the following:</p>
<ul>
<li><strong>CVE-2019-9511 “Data Dribble”</strong>: The attacker requests a large amount of
data from a specified resource over multiple streams. They manipulate window
size and stream priority to force the server to queue the data in 1-byte
chunks. Depending on how efficiently this data is queued, this can consume
excess CPU, memory, or both, potentially leading to a denial of service.</li>
<li><strong>CVE-2019-9512 “Ping Flood”</strong>: The attacker sends continual pings to an
HTTP/2 peer, causing the peer to build an internal queue of responses.
Depending on how efficiently this data is queued, this can consume excess
CPU, memory, or both, potentially leading to a denial of service.</li>
<li><strong>CVE-2019-9513 “Resource Loop”</strong>: The attacker creates multiple request
streams and continually shuffles the priority of the streams in a way that
causes substantial churn to the priority tree. This can consume excess CPU,
potentially leading to a denial of service.</li>
<li><strong>CVE-2019-9514 “Reset Flood”</strong>: The attacker opens a number of streams and
sends an invalid request over each stream that should solicit a stream of
RST_STREAM frames from the peer. Depending on how the peer queues the
RST_STREAM frames, this can consume excess memory, CPU, or both, potentially
leading to a denial of service.</li>
<li><strong>CVE-2019-9515 “Settings Flood”</strong>: The attacker sends a stream of SETTINGS
frames to the peer. Since the RFC requires that the peer reply with one
acknowledgement per SETTINGS frame, an empty SETTINGS frame is almost
equivalent in behavior to a ping. Depending on how efficiently this data is
queued, this can consume excess CPU, memory, or both, potentially leading to
a denial of service.</li>
<li><strong>CVE-2019-9516 “0-Length Headers Leak”</strong>: The attacker sends a stream of
headers with a 0-length header name and 0-length header value, optionally
Huffman encoded into 1-byte or greater headers. Some implementations allocate
memory for these headers and keep the allocation alive until the session
dies. This can consume excess memory, potentially leading to a denial of
service.</li>
<li><strong>CVE-2019-9517 “Internal Data Buffering”</strong>: The attacker opens the HTTP/2
window so the peer can send without constraint; however, they leave the TCP
window closed so the peer cannot actually write (many of) the bytes on the
wire. The attacker then sends a stream of requests for a large response
object. Depending on how the servers queue the responses, this can consume
excess memory, CPU, or both, potentially leading to a denial of service.</li>
<li><strong>CVE-2019-9518 “Empty Frames Flood”</strong>: The attacker sends a stream of frames
with an empty payload and without the end-of-stream flag. These frames can be
DATA, HEADERS, CONTINUATION and/or PUSH_PROMISE. The peer spends time
processing each frame disproportionate to attack bandwidth. This can consume
excess CPU, potentially leading to a denial of service. (Discovered by Piotr
Sikora of Google)</li>
</ul>
<h3 id="header-contact-and-future-updates">Contact and future updates<a id="contact-and-future-updates" class="anchor" href="#contact-and-future-updates" aria-labelledby="header-contact-and-future-updates"></a></h3><p>The current Node.js security policy and information about how to report a
vulnerability can be found at <a href="https://nodejs.org/en/security/">https://nodejs.org/en/security/</a>.</p>
<p>Subscribe to the low-volume announcement-only nodejs-sec mailing list at
<a href="https://groups.google.com/forum/#!forum/nodejs-sec">https://groups.google.com/forum/#!forum/nodejs-sec</a> to stay up to date on
security vulnerabilities and security-related releases of Node.js and the
projects maintained in the nodejs GitHub organization.</p>
]]></description><link>https://nodejs.org/en/blog/vulnerability/aug-2019-security-releases</link><guid isPermaLink="true">https://nodejs.org/en/blog/vulnerability/aug-2019-security-releases</guid><dc:creator><![CDATA[Sam Roberts]]></dc:creator><pubDate>Fri, 16 Aug 2019 14:58:40 GMT</pubDate></item><item><title><![CDATA[February 2019 Security Releases]]></title><description><![CDATA[<p><em>(Update 28-February-2018)</em> <strong>Security releases available</strong></p>
<h2 id="header-summary">Summary<a id="summary" class="anchor" href="#summary" aria-labelledby="header-summary"></a></h2><p>Updates are now available for all active Node.js release lines. In addition to fixes for security flaws in Node.js, they also include upgrades of Node.js 6 and 8 to OpenSSL 1.0.2r which contains a fix for a moderate severity security vulnerability. The original announcement is included below.</p>
<p>For these releases, we have decided to withhold the fix for the Misinterpretation of Input (<a href="https://cwe.mitre.org/data/definitions/115.html">CWE-115</a>) flaw mentioned in the original announcement. This flaw is very low severity and we are not satisfied that we had a complete and stable fix ready for release. We will be seeking to address this flaw via alternate mechanisms in the near future. In addition, we have introduced an additional CVE for a change in Node.js 6 that we have decided to classify as a Denial of Service (<a href="https://cwe.mitre.org/data/definitions/400.html">CWE-400</a>) flaw.</p>
<p>We recommend that all Node.js users upgrade to a version listed below as soon as possible.</p>
<h2 id="header-downloads-release-details">Downloads &amp; release details<a id="downloads-release-details" class="anchor" href="#downloads-release-details" aria-labelledby="header-downloads-release-details"></a></h2><p>Downloads are available for the following versions. Details of code changes can also be found on each release page.</p>
<ul>
<li><a href="https://nodejs.org/en/blog/release/v11.10.1">Node.js 11.10.1 (Current)</a></li>
<li><a href="https://nodejs.org/en/blog/release/v10.15.2">Node.js 10.15.2 (LTS &quot;Dubnium&quot;)</a></li>
<li><a href="https://nodejs.org/en/blog/release/v8.15.1">Node.js 8.15.1 (LTS &quot;Carbon&quot;)</a></li>
<li><a href="https://nodejs.org/en/blog/release/v6.17.0">Node.js 6.17.0 (LTS &quot;Boron&quot;)</a></li>
</ul>
<h2 id="header-node-js-slowloris-http-denial-of-service-with-keep-alive-cve-2019-5737">Node.js: Slowloris HTTP Denial of Service with keep-alive (CVE-2019-5737)<a id="node-js-slowloris-http-denial-of-service-with-keep-alive-cve-2019-5737" class="anchor" href="#node-js-slowloris-http-denial-of-service-with-keep-alive-cve-2019-5737" aria-labelledby="header-node-js-slowloris-http-denial-of-service-with-keep-alive-cve-2019-5737"></a></h2><p><em>Categorization: Uncontrolled Resource Consumption / Denial of Service (<a href="https://cwe.mitre.org/data/definitions/400.html">CWE-400</a>)</em></p>
<p>All actively supported release lines are vulnerable and the severity is LOW. An attacker can cause a Denial of Service (DoS) by establishing an HTTP or HTTPS connection in keep-alive mode and by sending headers very slowly thereby keeping the connection and associated resources alive for a long period of time. Attack potential is mitigated by the use of a load balancer or other proxy layer.</p>
<p>This vulnerability is an extension of CVE-2018-12122, addressed in <a href="https://nodejs.org/en/blog/vulnerability/november-2018-security-releases/">November, 2018</a>. The 40 second timeout and its adjustment by <code>server.headersTimeout</code> apply to this fix as in CVE-2018-12122.</p>
<p>CVE-2018-12122 originally reported by Jan Maybach (<a href="https://liebdich.com">liebdich.com</a>), keep-alive variant reported by <a href="https://twitter.com/pracucci">Marco Pracucci</a> (<a href="https://voxnest.com">Voxnest</a>), fixed by <a href="https://twitter.com/matteocollina">Matteo Collina</a>.</p>
<p><strong>Impact:</strong></p>
<ul>
<li>All versions of Node.js 6 (LTS &quot;Boron&quot;) <strong>are</strong> vulnerable</li>
<li>All versions of Node.js 8 (LTS &quot;Carbon&quot;) <strong>are</strong> vulnerable</li>
<li>All versions of Node.js 10 (LTS &quot;Dubnium&quot;) <strong>are</strong> vulnerable</li>
<li>All versions of Node.js 11 (Current) <strong>are</strong> vulnerable</li>
</ul>
<h2 id="header-node-js-denial-of-service-with-keep-alive-http-connections-cve-2019-5739">Node.js: Denial of Service with keep-alive HTTP connections (CVE-2019-5739)<a id="node-js-denial-of-service-with-keep-alive-http-connections-cve-2019-5739" class="anchor" href="#node-js-denial-of-service-with-keep-alive-http-connections-cve-2019-5739" aria-labelledby="header-node-js-denial-of-service-with-keep-alive-http-connections-cve-2019-5739"></a></h2><p><em>Categorization: Uncontrolled Resource Consumption / Denial of Service (<a href="https://cwe.mitre.org/data/definitions/400.html">CWE-400</a>)</em></p>
<p>Keep-alive HTTP and HTTPS connections can remain open and inactive for up to 2 minutes in Node.js 6.16.0 and earlier. Node.js 8.0.0 introduced a dedicated <a href="https://nodejs.org/api/http.html#http_server_keepalivetimeout"><code>server.keepAliveTimeout</code></a> which defaults to 5 seconds. The behavior in Node.js 6.16.0 and earlier is a potential Denial of Service (DoS) attack vector. Node.js 6.17.0 introduces <code>server.keepAliveTimeout</code> and the 5-second default.</p>
<p>The original fix was submitted by <a href="https://github.com/tshemsedinov">Timur Shemsedinov</a> (<a href="https://github.com/nodejs/node/pull/2534">nodejs/node#2534</a>) and backported by <a href="https://twitter.com/matteocollina">Matteo Collina</a>.</p>
<p><strong>Impact:</strong></p>
<ul>
<li>All versions of Node.js 6 (LTS &quot;Boron&quot;) <strong>are</strong> vulnerable</li>
<li>All versions of Node.js 8 (LTS &quot;Carbon&quot;) <strong>are NOT</strong> vulnerable</li>
<li>All versions of Node.js 10 (LTS &quot;Dubnium&quot;) <strong>are NOT</strong> vulnerable</li>
<li>All versions of Node.js 11 (Current) <strong>are NOT</strong> vulnerable</li>
</ul>
<h2 id="header-openssl-0-byte-record-padding-oracle-cve-2019-1559">OpenSSL: 0-byte record padding oracle (CVE-2019-1559)<a id="openssl-0-byte-record-padding-oracle-cve-2019-1559" class="anchor" href="#openssl-0-byte-record-padding-oracle-cve-2019-1559" aria-labelledby="header-openssl-0-byte-record-padding-oracle-cve-2019-1559"></a></h2><p><em>Severity: MODERATE</em></p>
<p>OpenSSL 1.0.2r contains a fix for <a href="https://www.openssl.org/news/secadv/20190226.txt">CVE-2019-1559</a> and is included in the releases for Node.js versions 6 and 8 only. Node.js 10 and 11 are not impacted by this vulnerability as they use newer versions of OpenSSL which do not contain the flaw.</p>
<p>Under certain circumstances, a TLS server can be forced to respond differently to a client if a zero-byte record is received with an invalid <em>padding</em> compared to a zero-byte record with an invalid <em>MAC</em>. This can be used as the basis of a <a href="https://en.wikipedia.org/wiki/Padding_oracle_attack">padding oracle attack</a> to decrypt data.</p>
<p>Only TLS connections using certain ciphersuites executing under certain conditions are exploitable. We are currently unable to determine whether the use of OpenSSL in Node.js exposes this vulnerability. We are taking a cautionary approach and recommend the same for users. For more information, see the <a href="https://www.openssl.org/news/secadv/20190226.txt">advisory</a> and a <a href="https://github.com/RUB-NDS/TLS-Padding-Oracles">detailed write-up</a> by the reporters of the vulnerability.</p>
<p><strong>Impact:</strong></p>
<ul>
<li>All versions of Node.js 6 (LTS &quot;Boron&quot;) <strong>are</strong> vulnerable</li>
<li>All versions of Node.js 8 (LTS &quot;Carbon&quot;) <strong>are</strong> vulnerable</li>
<li>All versions of Node.js 10 (LTS &quot;Dubnium&quot;) <strong>are NOT</strong> vulnerable</li>
<li>All versions of Node.js 11 (Current) <strong>are NOT</strong> vulnerable</li>
</ul>
<h2 id="header-acknowledgements">Acknowledgements<a id="acknowledgements" class="anchor" href="#acknowledgements" aria-labelledby="header-acknowledgements"></a></h2><p>Matteo Collina for vulnerability fixes.</p>
<p>Shigeki Ohtsu and Sam Roberts for the OpenSSL upgrade.</p>
<p>Jan Maybach and Marco Pracucci for reporting vulnerabilities via the appropriate channels (see below).</p>
<p>Other members of the Node.js security team for reviews and discussion.</p>
<p><strong><em>Original post is included below</em></strong></p>
<h2 id="header-summary-1">Summary<a id="summary-1" class="anchor" href="#summary-1" aria-labelledby="header-summary-1"></a></h2><p>The Node.js project will release new versions of all supported release lines on, or shortly after, Wednesday, February 27th, 2019 UTC. These releases will incorporate at least two security fixes specific to Node.js, the highest severity of which is &#39;low&#39;.</p>
<p>The OpenSSL project has announced <a href="https://mta.openssl.org/pipermail/openssl-announce/2019-February/000145.html">releases</a> for the 26th which may impact some release lines of Node.js and require inclusion in our security releases. The highest severity indicated by OpenSSL is <a href="https://www.openssl.org/policies/secpolicy.html#moderate">&#39;moderate&#39;</a> and impacts OpenSSL 1.0.2 which is used by Node.js 6.x and 8.x. A bug-fix release for OpenSSL 1.1.1 will also be made available and we will assess the impact, if any, on Node.js 11.x which uses this version. Node.js 10.x will not be impacted by the OpenSSL releases.</p>
<h2 id="header-impact">Impact<a id="impact" class="anchor" href="#impact" aria-labelledby="header-impact"></a></h2><p>Releases for all actively supported release lines will be made available to fix the following vulnerabilities.</p>
<p>All versions of <strong>Node.js 6 (LTS &quot;Boron&quot;)</strong> are vulnerable to:</p>
<ul>
<li>1 Uncontrolled Resource Consumption / Denial of Service (<a href="https://cwe.mitre.org/data/definitions/400.html">CWE-400</a>) vulnerability</li>
<li>1 Misinterpretation of Input (<a href="https://cwe.mitre.org/data/definitions/115.html">CWE-115</a>) vulnerability</li>
<li>Possible update to OpenSSL 1.0.2r depending on assessed impact</li>
</ul>
<p>All versions of <strong>Node.js 8 (LTS &quot;Carbon&quot;)</strong> are vulnerable to:</p>
<ul>
<li>1 Uncontrolled Resource Consumption / Denial of Service (<a href="https://cwe.mitre.org/data/definitions/400.html">CWE-400</a>) vulnerability</li>
<li>1 Misinterpretation of Input (<a href="https://cwe.mitre.org/data/definitions/115.html">CWE-115</a>) vulnerability</li>
<li>Possible update to OpenSSL 1.0.2r depending on assessed impact</li>
</ul>
<p>All versions of <strong>Node.js 10 (LTS &quot;Dubnium&quot;)</strong> are vulnerable to:</p>
<ul>
<li>1 Uncontrolled Resource Consumption / Denial of Service (<a href="https://cwe.mitre.org/data/definitions/400.html">CWE-400</a>) vulnerability</li>
<li>1 Misinterpretation of Input (<a href="https://cwe.mitre.org/data/definitions/115.html">CWE-115</a>) vulnerability</li>
</ul>
<p>All versions of <strong>Node.js 11 (Current)</strong> are vulnerable to:</p>
<ul>
<li>1 Uncontrolled Resource Consumption / Denial of Service (<a href="https://cwe.mitre.org/data/definitions/400.html">CWE-400</a>) vulnerability</li>
<li>1 Misinterpretation of Input (<a href="https://cwe.mitre.org/data/definitions/115.html">CWE-115</a>) vulnerability</li>
<li>Possible update to OpenSSL 1.1.1b depending on assessed impact</li>
</ul>
<h2 id="header-release-timing">Release timing<a id="release-timing" class="anchor" href="#release-timing" aria-labelledby="header-release-timing"></a></h2><p>Releases will be available at, or shortly after, Wednesday, February 27th, 2019 UTC, along with disclosure of the details for the flaws addressed in each release in order to allow for complete impact assessment by users.</p>
<h2 id="header-contact-and-future-updates">Contact and future updates<a id="contact-and-future-updates" class="anchor" href="#contact-and-future-updates" aria-labelledby="header-contact-and-future-updates"></a></h2><p>The current Node.js security policy can be found at <a href="https://nodejs.org/en/security/">https://nodejs.org/en/security/</a>.</p>
<p>Please contact <a href="mailto:security@nodejs.org">security@nodejs.org</a> if you wish to report a vulnerability in Node.js.</p>
<p>Subscribe to the low-volume announcement-only nodejs-sec mailing list at <a href="https://groups.google.com/forum/#!forum/nodejs-sec">https://groups.google.com/forum/#!forum/nodejs-sec</a> to stay up to date on security vulnerabilities and security-related releases of Node.js and the projects maintained in the <a href="https://github.com/nodejs/">nodejs GitHub organization</a>.</p>
]]></description><link>https://nodejs.org/en/blog/vulnerability/february-2019-security-releases</link><guid isPermaLink="true">https://nodejs.org/en/blog/vulnerability/february-2019-security-releases</guid><dc:creator><![CDATA[Rod Vagg]]></dc:creator><pubDate>Thu, 28 Feb 2019 12:53:26 GMT</pubDate></item><item><title><![CDATA[November 2018 Security Releases]]></title><description><![CDATA[<p><em>(Update 27-November-2018)</em> <strong>Security releases available</strong></p>
<h2 id="header-summary">Summary<a id="summary" class="anchor" href="#summary" aria-labelledby="header-summary"></a></h2><p>Updates are now available for all active Node.js release lines. These include fixes for the vulnerabilities identified in the initial announcement (below). They also include upgrades of Node.js 6 and 8 to OpenSSL 1.0.2q, and upgrades of Node.js 10 and 11 to OpenSSL 1.1.0j.</p>
<p>We recommend that all Node.js users upgrade to a version listed below as soon as possible.</p>
<h2 id="header-downloads-release-details">Downloads &amp; release details<a id="downloads-release-details" class="anchor" href="#downloads-release-details" aria-labelledby="header-downloads-release-details"></a></h2><p>Downloads are available for the following versions. Details of code changes can also be found on each release page.</p>
<ul>
<li><a href="https://nodejs.org/en/blog/release/v11.3.0">Node.js 11.3.0 (Current)</a></li>
<li><a href="https://nodejs.org/en/blog/release/v10.14.0">Node.js 10.14.0 (LTS &quot;Dubnium&quot;)</a></li>
<li><a href="https://nodejs.org/en/blog/release/v8.14.0">Node.js 8.14.0 (LTS &quot;Carbon&quot;)</a></li>
<li><a href="https://nodejs.org/en/blog/release/v6.15.0">Node.js 6.15.0 (LTS &quot;Boron&quot;)</a></li>
</ul>
<p><strong><em>Note (3-December-2018):</em></strong> <em>Node.js <a href="/en/blog/release/v6.15.1">6.15.1 (LTS &quot;Boron&quot;)</a> was released to fix a misapplied backport for one of the fixes listed below. See the <a href="/en/blog/release/v6.15.1">release page</a> for more information.</em></p>
<h2 id="header-debugger-port-5858-listens-on-any-interface-by-default-cve-2018-12120">Debugger port 5858 listens on any interface by default (CVE-2018-12120)<a id="debugger-port-5858-listens-on-any-interface-by-default-cve-2018-12120" class="anchor" href="#debugger-port-5858-listens-on-any-interface-by-default-cve-2018-12120" aria-labelledby="header-debugger-port-5858-listens-on-any-interface-by-default-cve-2018-12120"></a></h2><p><em>Categorization: Unprotected Primary Channel (<a href="https://cwe.mitre.org/data/definitions/419.html">CWE-419</a>)</em></p>
<p>All versions of Node.js 6 are vulnerable and the severity is HIGH. When the debugger is enabled with <code>node --debug</code> or <code>node debug</code>, it listens to port 5858 on all interfaces by default. This may allow remote computers to attach to the debug port and evaluate arbitrary JavaScript. The default interface is now localhost. It has always been possible to start the debugger on a specific interface, such as <code>node --debug=localhost</code>. The debugger was removed in Node.js 8 and replaced with the inspector, so no versions from 8 and later are vulnerable.</p>
<p>Reported and fixed by <a href="https://github.com/bnoordhuis">Ben Noordhuis</a>.</p>
<p><strong>Impact:</strong></p>
<ul>
<li>All versions of Node.js 6 (LTS &quot;Boron&quot;) <strong>are</strong> vulnerable</li>
<li>All versions of Node.js 8 (LTS &quot;Carbon&quot;) <strong>are NOT</strong> vulnerable</li>
<li>All versions of Node.js 10 (LTS &quot;Dubnium&quot;) <strong>are NOT</strong> vulnerable</li>
<li>All versions of Node.js 11 (Current) <strong>are NOT</strong> vulnerable</li>
</ul>
<h2 id="header-denial-of-service-with-large-http-headers-cve-2018-12121">Denial of Service with large HTTP headers (CVE-2018-12121)<a id="denial-of-service-with-large-http-headers-cve-2018-12121" class="anchor" href="#denial-of-service-with-large-http-headers-cve-2018-12121" aria-labelledby="header-denial-of-service-with-large-http-headers-cve-2018-12121"></a></h2><p><em>Categorization: Uncontrolled Resource Consumption / Denial of Service (<a href="https://cwe.mitre.org/data/definitions/400.html">CWE-400</a>)</em></p>
<p>All versions of 6 and later are vulnerable and the severity is HIGH. By using a combination of many requests with maximum sized headers (almost 80 KB per connection), and carefully timed completion of the headers, it is possible to cause the HTTP server to abort from heap allocation failure. Attack potential is mitigated by the use of a load balancer or other proxy layer.</p>
<p>The total size of HTTP headers received by Node.js now must not exceed 8192 bytes.</p>
<p>Reported by <a href="https://github.com/trevnorris">Trevor Norris</a>, fixed by <a href="https://twitter.com/matteocollina">Matteo Collina</a>.</p>
<p><strong>Impact:</strong></p>
<ul>
<li>All versions of Node.js 6 (LTS &quot;Boron&quot;) <strong>are</strong> vulnerable</li>
<li>All versions of Node.js 8 (LTS &quot;Carbon&quot;) <strong>are</strong> vulnerable</li>
<li>All versions of Node.js 10 (LTS &quot;Dubnium&quot;) <strong>are</strong> vulnerable</li>
<li>All versions of Node.js 11 (Current) <strong>are</strong> vulnerable</li>
</ul>
<h2 id="header-slowloris-http-denial-of-service-cve-2018-12122">&quot;Slowloris&quot; HTTP Denial of Service (CVE-2018-12122)<a id="slowloris-http-denial-of-service-cve-2018-12122" class="anchor" href="#slowloris-http-denial-of-service-cve-2018-12122" aria-labelledby="header-slowloris-http-denial-of-service-cve-2018-12122"></a></h2><p><em>Categorization: Uncontrolled Resource Consumption / Denial of Service (<a href="https://cwe.mitre.org/data/definitions/400.html">CWE-400</a>)</em></p>
<p>All versions of Node.js 6 and later are vulnerable and the severity is LOW. An attacker can cause a Denial of Service (DoS) by sending headers very slowly keeping HTTP or HTTPS connections and associated resources alive for a long period of time. Attack potential is mitigated by the use of a load balancer or other proxy layer.</p>
<p>A timeout of 40 seconds now applies to servers receiving HTTP headers. This value can be adjusted with <code>server.headersTimeout</code>. Where headers are not completely received within this period, the socket is destroyed on the next received chunk. In conjunction with <code>server.setTimeout()</code>, this aids in protecting against excessive resource retention and possible Denial of Service.</p>
<p>Reported by Jan Maybach (<a href="https://liebdich.com">liebdich.com</a>), fixed by <a href="https://twitter.com/matteocollina">Matteo Collina</a>.</p>
<p><strong>Impact:</strong></p>
<ul>
<li>All versions of Node.js 6 (LTS &quot;Boron&quot;) <strong>are</strong> vulnerable</li>
<li>All versions of Node.js 8 (LTS &quot;Carbon&quot;) <strong>are</strong> vulnerable</li>
<li>All versions of Node.js 10 (LTS &quot;Dubnium&quot;) <strong>are</strong> vulnerable</li>
<li>All versions of Node.js 11 (Current) <strong>are</strong> vulnerable</li>
</ul>
<h2 id="header-hostname-spoofing-in-url-parser-for-javascript-protocol-cve-2018-12123">Hostname spoofing in URL parser for javascript protocol (CVE-2018-12123)<a id="hostname-spoofing-in-url-parser-for-javascript-protocol-cve-2018-12123" class="anchor" href="#hostname-spoofing-in-url-parser-for-javascript-protocol-cve-2018-12123" aria-labelledby="header-hostname-spoofing-in-url-parser-for-javascript-protocol-cve-2018-12123"></a></h2><p><em>Categorization: Misinterpretation of Input (<a href="https://cwe.mitre.org/data/definitions/115.html">CWE-115</a>)</em></p>
<p>All versions of Node.js 6 and later are vulnerable and the severity is LOW. If a Node.js application is using <code>url.parse()</code> to determine the URL hostname, that hostname can be spoofed by using a mixed case &quot;javascript:&quot; (e.g. &quot;javAscript:&quot;) protocol (other protocols are not affected). If security decisions are made about the URL based on the hostname, they may be incorrect.</p>
<p>Reported by <a href="https://twitter.com/_bayotop">Martin Bajanik</a> (<a href="https://kenticocloud.com/">Kentico</a>), fixed by <a href="https://twitter.com/matteocollina">Matteo Collina</a>.</p>
<p><strong>Impact:</strong></p>
<ul>
<li>All versions of Node.js 6 (LTS &quot;Boron&quot;) <strong>are</strong> vulnerable</li>
<li>All versions of Node.js 8 (LTS &quot;Carbon&quot;) <strong>are</strong> vulnerable</li>
<li>All versions of Node.js 10 (LTS &quot;Dubnium&quot;) <strong>are</strong> vulnerable</li>
<li>All versions of Node.js 11 (Current) <strong>are</strong> vulnerable</li>
</ul>
<h2 id="header-http-request-splitting-cve-2018-12116">HTTP request splitting (CVE-2018-12116)<a id="http-request-splitting-cve-2018-12116" class="anchor" href="#http-request-splitting-cve-2018-12116" aria-labelledby="header-http-request-splitting-cve-2018-12116"></a></h2><p><em>Categorization: Misinterpretation of Input (<a href="https://cwe.mitre.org/data/definitions/115.html">CWE-115</a>)</em></p>
<p>Node.js 6 and 8 are vulnerable and the severity is MEDIUM. If Node.js can be convinced to use unsanitized user-provided Unicode data for the <code>path</code> option of an HTTP request, then data can be provided which will trigger a second, unexpected, and user-defined HTTP request to made to the same server.</p>
<p>Reported as security concern for Node.js 6 and 8 by <a href="https://twitter.com/arkadiyt">Arkadiy Tetelman</a> (<a href="https://lob.com">Lob</a>), fixed by backporting a change by <a href="https://github.com/bennofs">Benno Fünfstück</a> applied to Node.js 10 and later.</p>
<p><strong>Impact:</strong></p>
<ul>
<li>All versions of Node.js 6 (LTS &quot;Boron&quot;) <strong>are</strong> vulnerable</li>
<li>All versions of Node.js 8 (LTS &quot;Carbon&quot;) <strong>are</strong> vulnerable</li>
<li>All versions of Node.js 10 (LTS &quot;Dubnium&quot;) <strong>are NOT</strong> vulnerable</li>
<li>All versions of Node.js 11 (Current) <strong>are NOT</strong> vulnerable</li>
</ul>
<h2 id="header-openssl-timing-vulnerability-in-ecdsa-signature-generation-cve-2018-0735">OpenSSL Timing vulnerability in ECDSA signature generation (CVE-2018-0735)<a id="openssl-timing-vulnerability-in-ecdsa-signature-generation-cve-2018-0735" class="anchor" href="#openssl-timing-vulnerability-in-ecdsa-signature-generation-cve-2018-0735" aria-labelledby="header-openssl-timing-vulnerability-in-ecdsa-signature-generation-cve-2018-0735"></a></h2><p><em>Severity: LOW</em></p>
<p>The OpenSSL ECDSA signature algorithm has been shown to be vulnerable to a timing side-channel attack. An attacker could use variations in the signing algorithm to recover the private key.</p>
<p><strong>Impact:</strong></p>
<ul>
<li>All versions of Node.js 6 (LTS &quot;Boron&quot;) <strong>are NOT</strong> vulnerable</li>
<li>All versions of Node.js 8 (LTS &quot;Carbon&quot;) <strong>are NOT</strong> vulnerable</li>
<li>All versions of Node.js 10 (LTS &quot;Dubnium&quot;) <strong>are</strong> vulnerable</li>
<li>All versions of Node.js 11 (Current) <strong>are</strong> vulnerable</li>
</ul>
<h2 id="header-openssl-timing-vulnerability-in-dsa-signature-generation-cve-2018-0734">OpenSSL Timing vulnerability in DSA signature generation (CVE-2018-0734)<a id="openssl-timing-vulnerability-in-dsa-signature-generation-cve-2018-0734" class="anchor" href="#openssl-timing-vulnerability-in-dsa-signature-generation-cve-2018-0734" aria-labelledby="header-openssl-timing-vulnerability-in-dsa-signature-generation-cve-2018-0734"></a></h2><p><em>Severity: LOW</em></p>
<p>The OpenSSL DSA signature algorithm has been shown to be vulnerable to a timing side-channel attack. An attacker could use variations in the signing algorithm to recover the private key.</p>
<p><strong>Impact:</strong></p>
<ul>
<li>All versions of Node.js 6 (LTS &quot;Boron&quot;) <strong>are</strong> vulnerable</li>
<li>All versions of Node.js 8 (LTS &quot;Carbon&quot;) <strong>are</strong> vulnerable</li>
<li>All versions of Node.js 10 (LTS &quot;Dubnium&quot;) <strong>are</strong> vulnerable</li>
<li>All versions of Node.js 11 (Current) <strong>are</strong> vulnerable</li>
</ul>
<h2 id="header-openssl-microarchitecture-timing-vulnerability-in-ecc-scalar-multiplication-cve-2018-5407">OpenSSL Microarchitecture timing vulnerability in ECC scalar multiplication (CVE-2018-5407)<a id="openssl-microarchitecture-timing-vulnerability-in-ecc-scalar-multiplication-cve-2018-5407" class="anchor" href="#openssl-microarchitecture-timing-vulnerability-in-ecc-scalar-multiplication-cve-2018-5407" aria-labelledby="header-openssl-microarchitecture-timing-vulnerability-in-ecc-scalar-multiplication-cve-2018-5407"></a></h2><p><em>Severity: LOW</em></p>
<p>OpenSSL ECC scalar multiplication, used in e.g. ECDSA and ECDH, has been shown to be vulnerable to a microarchitecture timing side-channel attack. An attacker with sufficient access to mount local timing attacks during ECDSA signature generation could recover the private key.</p>
<p><strong>Impact:</strong></p>
<ul>
<li>All versions of Node.js 6 (LTS &quot;Boron&quot;) <strong>are</strong> vulnerable</li>
<li>All versions of Node.js 8 (LTS &quot;Carbon&quot;) <strong>are</strong> vulnerable</li>
<li>All versions of Node.js 10 (LTS &quot;Dubnium&quot;) up to 10.8.0 <strong>are</strong> vulnerable</li>
<li>All versions of Node.js 10 (LTS &quot;Dubnium&quot;) from 10.9.0 <strong>are NOT</strong> vulnerable</li>
<li>All versions of Node.js 11 (Current) <strong>are NOT</strong> vulnerable</li>
</ul>
<h2 id="header-acknowledgements">Acknowledgements<a id="acknowledgements" class="anchor" href="#acknowledgements" aria-labelledby="header-acknowledgements"></a></h2><p>Matteo Collina for a significant amount of work fixing vulnerabilities.</p>
<p>Sam Roberts for the OpenSSL upgrades, other code contributions and assisting in the preparion of these releases.</p>
<p>Ben Noordhuis, Fedor Indutny and Benno Fünfstück for code contributions.</p>
<p>Trevor Norris, Jan Maybach, Martin Bajanik, Arkadiy Tetelman for reporting vulnerabilities via the appropriate channels (see below).</p>
<p><strong><em>Original post is included below</em></strong></p>
<h2 id="header-summary-1">Summary<a id="summary-1" class="anchor" href="#summary-1" aria-labelledby="header-summary-1"></a></h2><p>Node.js will release new versions of all supported release lines on, or shortly after, November 27th, 2018 UTC. These releases will incorporate a number of security fixes specific to Node.js, as well as the updates to OpenSSL that were released today, November 20th, 2018.</p>
<p>OpenSSL <a href="https://www.openssl.org/news/openssl-1.0.2-notes.html">1.0.2q</a> and <a href="https://www.openssl.org/news/openssl-1.1.0-notes.html">1.1.0j</a> include fixes for previously disclosed low-severity timing vulnerabilities. See the <a href="https://mta.openssl.org/pipermail/openssl-announce/2018-November/000138.html">OpenSSL release announcement</a>.</p>
<h2 id="header-impact">Impact<a id="impact" class="anchor" href="#impact" aria-labelledby="header-impact"></a></h2><p>Releases for all actively supported release lines will be made available to fix the following vulnerabilities.</p>
<p>All versions of <strong>Node.js 6 (LTS &quot;Boron&quot;)</strong> are vulnerable to:</p>
<ul>
<li>2 Uncontrolled Resource Consumption / Denial of Service (<a href="https://cwe.mitre.org/data/definitions/400.html">CWE-400</a>) vulnerabilities</li>
<li>2 Misinterpretation of Input (<a href="https://cwe.mitre.org/data/definitions/115.html">CWE-115</a>) vulnerabilities</li>
<li>1 Unprotected Primary Channel (<a href="https://cwe.mitre.org/data/definitions/419.html">CWE-419</a>) vulnerability</li>
</ul>
<p>All versions of <strong>Node.js 8 (LTS &quot;Carbon&quot;)</strong> are vulnerable to:</p>
<ul>
<li>2 Uncontrolled Resource Consumption / Denial of Service (<a href="https://cwe.mitre.org/data/definitions/400.html">CWE-400</a>) vulnerabilities</li>
<li>2 Misinterpretation of Input (<a href="https://cwe.mitre.org/data/definitions/115.html">CWE-115</a>) vulnerabilities</li>
</ul>
<p>All versions of <strong>Node.js 10 (LTS &quot;Dubnium&quot;)</strong> are vulnerable to:</p>
<ul>
<li>2 Uncontrolled Resource Consumption / Denial of Service (<a href="https://cwe.mitre.org/data/definitions/400.html">CWE-400</a>) vulnerabilities</li>
<li>1 Misinterpretation of Input (<a href="https://cwe.mitre.org/data/definitions/115.html">CWE-115</a>) vulnerability</li>
</ul>
<p>All versions of <strong>Node.js 11 (Current)</strong> are vulnerable to:</p>
<ul>
<li>2 Uncontrolled Resource Consumption / Denial of Service (<a href="https://cwe.mitre.org/data/definitions/400.html">CWE-400</a>) vulnerabilities</li>
<li>1 Misinterpretation of Input (<a href="https://cwe.mitre.org/data/definitions/115.html">CWE-115</a>) vulnerability</li>
</ul>
<h2 id="header-release-timing">Release timing<a id="release-timing" class="anchor" href="#release-timing" aria-labelledby="header-release-timing"></a></h2><p>Releases will be available at, or shortly after, the 27th of November, 2018 UTC, along with disclosure of the details for the flaws addressed in each release in order to allow for complete impact assessment by users.</p>
<h2 id="header-contact-and-future-updates">Contact and future updates<a id="contact-and-future-updates" class="anchor" href="#contact-and-future-updates" aria-labelledby="header-contact-and-future-updates"></a></h2><p>The current Node.js security policy can be found at <a href="https://nodejs.org/en/security/">https://nodejs.org/en/security/</a>.</p>
<p>Please contact <a href="mailto:security@nodejs.org">security@nodejs.org</a> if you wish to report a vulnerability in Node.js.</p>
<p>Subscribe to the low-volume announcement-only nodejs-sec mailing list at <a href="https://groups.google.com/forum/#!forum/nodejs-sec">https://groups.google.com/forum/#!forum/nodejs-sec</a> to stay up to date on security vulnerabilities and security-related releases of Node.js and the projects maintained in the <a href="https://github.com/nodejs/">nodejs GitHub organization</a>.</p>
]]></description><link>https://nodejs.org/en/blog/vulnerability/november-2018-security-releases</link><guid isPermaLink="true">https://nodejs.org/en/blog/vulnerability/november-2018-security-releases</guid><dc:creator><![CDATA[Rod Vagg]]></dc:creator><pubDate>Wed, 28 Nov 2018 00:55:46 GMT</pubDate></item><item><title><![CDATA[August 2018 Security Releases]]></title><description><![CDATA[<p><em>(Update 16-August-2018)</em> Security releases available</p>
<h2 id="header-summary">Summary<a id="summary" class="anchor" href="#summary" aria-labelledby="header-summary"></a></h2><p>Updates are now available for all active Node.js release lines. These include upgrades for OpenSSL and fixes for the vulnerabilities identified in the initial announcement (below).</p>
<p>We recommend that all users upgrade as soon as practical.</p>
<h2 id="header-downloads-release-details">Downloads &amp; release details<a id="downloads-release-details" class="anchor" href="#downloads-release-details" aria-labelledby="header-downloads-release-details"></a></h2><p>Downloads are available for the following versions. Details of code changes can also be found on each release page.</p>
<ul>
<li><a href="https://nodejs.org/en/blog/release/v10.9.0">Node.js 10.9.0 (Current)</a></li>
<li><a href="https://nodejs.org/en/blog/release/v8.11.4">Node.js 8.11.4 (LTS &quot;Carbon&quot;)</a></li>
<li><a href="https://nodejs.org/en/blog/release/v6.14.4">Node.js 6.14.4 (LTS &quot;Boron&quot;)</a></li>
</ul>
<h2 id="header-openssl-client-dos-due-to-large-dh-parameter-cve-2018-0732">OpenSSL: Client DoS due to large DH parameter (<a href="https://www.openssl.org/news/secadv/20180612.txt">CVE-2018-0732</a>)<a id="openssl-client-dos-due-to-large-dh-parameter-cve-2018-0732" class="anchor" href="#openssl-client-dos-due-to-large-dh-parameter-cve-2018-0732" aria-labelledby="header-openssl-client-dos-due-to-large-dh-parameter-cve-2018-0732"></a></h2><p>All actively supported release lines of Node.js are impacted by this flaw. Patches are included in both OpenSSL 1.1.0i (Node.js 10) and 1.0.2p (Node.js 6 LTS &quot;Boron&quot; and Node.js 8 LTS &quot;Carbon&quot;).</p>
<p>This fixes a potential denial of service (DoS) attack against <em>client</em> connections by a malicious server. During a TLS communication handshake, where both client and server agree to use a cipher-suite using DH or DHE (Diffie–Hellman, in both ephemeral and non-ephemeral modes), a malicious server can send a very large prime value to the client. Because this has been unbounded in OpenSSL, the client can be forced to spend an unreasonably long period of time to generate a key, potentially causing a denial of service.</p>
<p><strong>Impact:</strong></p>
<ul>
<li>All previous versions of Node.js 6.x (LTS &quot;Boron&quot;) <strong>are</strong> vulnerable</li>
<li>All previous versions of Node.js 8.x (LTS &quot;Carbon&quot;) <strong>are</strong> vulnerable</li>
<li>All previous versions of Node.js 10.x (Current) <strong>are</strong> vulnerable</li>
</ul>
<h2 id="header-cache-timing-vulnerability-in-rsa-key-generation-cve-2018-0737">Cache timing vulnerability in RSA Key Generation (<a href="https://www.openssl.org/news/secadv/20180416.txt">CVE-2018-0737</a>)<a id="cache-timing-vulnerability-in-rsa-key-generation-cve-2018-0737" class="anchor" href="#cache-timing-vulnerability-in-rsa-key-generation-cve-2018-0737" aria-labelledby="header-cache-timing-vulnerability-in-rsa-key-generation-cve-2018-0737"></a></h2><p>Node.js does not expose RSA key generation functionality. Therefore, <strong>Node.js is not impacted by this vulnerability</strong>.</p>
<h2 id="header-openssl-ecdsa-key-extraction-via-local-side-channel-cve-not-assigned">OpenSSL: ECDSA key extraction via local side-channel (CVE not assigned)<a id="openssl-ecdsa-key-extraction-via-local-side-channel-cve-not-assigned" class="anchor" href="#openssl-ecdsa-key-extraction-via-local-side-channel-cve-not-assigned" aria-labelledby="header-openssl-ecdsa-key-extraction-via-local-side-channel-cve-not-assigned"></a></h2><p>All actively supported release lines of Node.js are impacted by this flaw. Patches are included in both OpenSSL 1.1.0i (Node.js 10) and 1.0.2p (Node.js 6 LTS &quot;Boron&quot; and Node.js 8 LTS &quot;Carbon&quot;).</p>
<p>Attackers with access to observe cache-timing may be able to extract DSA or ECDSA private keys by causing the victim to create several signatures and watching responses. This flaw does not have a CVE due to OpenSSL policy to not assign itself CVEs for local-only vulnerabilities that are more academic than practical. This vulnerability was discovered by <a href="https://www.nccgroup.trust/us/our-research/technical-advisory-return-of-the-hidden-number-problem/">Keegan Ryan at NCC Group</a> and impacts many cryptographic libraries including OpenSSL.</p>
<p><strong>Impact:</strong></p>
<ul>
<li>All previous versions of Node.js 6.x (LTS &quot;Boron&quot;) <strong>are</strong> vulnerable</li>
<li>All previous versions of Node.js 8.x (LTS &quot;Carbon&quot;) <strong>are</strong> vulnerable</li>
<li>All previous versions of Node.js 10.x (Current) <strong>are</strong> vulnerable</li>
</ul>
<h2 id="header-unintentional-exposure-of-uninitialized-memory-cve-2018-7166">Unintentional exposure of uninitialized memory (CVE-2018-7166)<a id="unintentional-exposure-of-uninitialized-memory-cve-2018-7166" class="anchor" href="#unintentional-exposure-of-uninitialized-memory-cve-2018-7166" aria-labelledby="header-unintentional-exposure-of-uninitialized-memory-cve-2018-7166"></a></h2><p><strong>Only Node.js 10 is impacted by this flaw. Our previous announcement wrongly stated that all release lines were vulnerable.</strong></p>
<p>Node.js TSC member Сковорода Никита Андреевич (Nikita Skovoroda / <a href="https://github.com/chalker">@ChALkeR</a>) discovered an argument processing flaw that causes <code>Buffer.alloc()</code> to return uninitialized memory. This method is intended to be safe and only return initialized, or cleared, memory. The third argument specifying <code>encoding</code> can be passed as a number, this is misinterpreted by <code>Buffer</code>&#39;s internal &quot;fill&quot; method as the <code>start</code> to a fill operation. This flaw may be abused where <code>Buffer.alloc()</code> arguments are derived from user input to return uncleared memory blocks that may contain sensitive information.</p>
<p><strong>Impact:</strong></p>
<ul>
<li>All versions of Node.js 6.x (LTS &quot;Boron&quot;) <strong>are NOT</strong> vulnerable</li>
<li>All versions of Node.js 8.x (LTS &quot;Carbon&quot;) <strong>are NOT</strong> vulnerable</li>
<li>All previous versions of Node.js 10.x (Current) <strong>are</strong> vulnerable</li>
</ul>
<h2 id="header-out-of-bounds-oob-write-cve-2018-12115">Out of bounds (OOB) write (CVE-2018-12115)<a id="out-of-bounds-oob-write-cve-2018-12115" class="anchor" href="#out-of-bounds-oob-write-cve-2018-12115" aria-labelledby="header-out-of-bounds-oob-write-cve-2018-12115"></a></h2><p>All actively supported release lines of Node.js are impacted by this flaw.</p>
<p>Node.js TSC member Сковорода Никита Андреевич (Nikita Skovoroda / <a href="https://github.com/chalker">@ChALkeR</a>) discovered an OOB write in <code>Buffer</code> that can be used to write to memory outside of a <code>Buffer</code>&#39;s memory space. This can corrupt unrelated <code>Buffer</code> objects or cause the Node.js process to crash.</p>
<p>When used with UCS-2 encoding (recognized by Node.js under the names <code>&#39;ucs2&#39;</code>, <code>&#39;ucs-2&#39;</code>, <code>&#39;utf16le&#39;</code> and <code>&#39;utf-16le&#39;</code>), <code>Buffer#write()</code> can be abused to write outside of the bounds of a single <code>Buffer</code>. Writes that start from the second-to-last position of a buffer cause a miscalculation of the maximum length of the input bytes to be written.</p>
<p><strong>Impact:</strong></p>
<ul>
<li>All previous versions of Node.js 6.x (LTS &quot;Boron&quot;) <strong>are</strong> vulnerable</li>
<li>All previous versions of Node.js 8.x (LTS &quot;Carbon&quot;) <strong>are</strong> vulnerable</li>
<li>All previous versions of Node.js 10.x (Current) <strong>are</strong> vulnerable</li>
</ul>
<p><strong><em>Original post is included below</em></strong></p>
<h2 id="header-summary-1">Summary<a id="summary-1" class="anchor" href="#summary-1" aria-labelledby="header-summary-1"></a></h2><p>The Node.js project will be releasing new versions for each of its supported release lines on, or shortly after, the 15th of August, 2018 (UTC). These releases will incorporate a number of security fixes and an upgraded version of OpenSSL.</p>
<p>We consider all of the flaws being addressed in these releases to be <em>low severity</em>. However, users should assess the severity of the impact on their own applications using the information disclosed here and the additional disclosure that will come with the releases.</p>
<h2 id="header-openssl-1-1-0i-and-1-0-2p">OpenSSL 1.1.0i and 1.0.2p<a id="openssl-1-1-0i-and-1-0-2p" class="anchor" href="#openssl-1-1-0i-and-1-0-2p" aria-labelledby="header-openssl-1-1-0i-and-1-0-2p"></a></h2><p>The OpenSSL team <a href="https://mta.openssl.org/pipermail/openssl-announce/2018-August/000129.html">have announced</a> that OpenSSL 1.1.0i and 1.0.2p will be made available on the 14th of August, 2018. There will be three &quot;LOW severity&quot; security fixes in this release that have already been disclosed, and the fixes made available on the OpenSSL git repository. Two of these items are relevant to Node.js users:</p>
<ul>
<li>OpenSSL: Client DoS due to large DH parameter (<a href="https://www.openssl.org/news/secadv/20180612.txt">CVE-2018-0732</a>)</li>
<li>OpenSSL: ECDSA key extraction via local side-channel (CVE not assigned)</li>
</ul>
<p><strong>Impact:</strong></p>
<ul>
<li>All versions of Node.js 6.x (LTS &quot;Boron&quot;) <strong>are</strong> impacted via OpenSSL 1.0.2</li>
<li>All versions of Node.js 8.x (LTS &quot;Carbon&quot;) <strong>are</strong> impacted via OpenSSL 1.0.2</li>
<li>All versions of Node.js 10.x (Current) <strong>are</strong> impacted via OpenSSL 1.1.0</li>
</ul>
<h2 id="header-node-js-security-inclusions">Node.js security inclusions<a id="node-js-security-inclusions" class="anchor" href="#node-js-security-inclusions" aria-labelledby="header-node-js-security-inclusions"></a></h2><ul>
<li>Unintentional exposure of uninitialized memory (CVE-2018-7166)</li>
<li>Out of bounds (OOB) write (CVE-2018-12115)</li>
</ul>
<p><strong>All actively supported release lines of Node.js are impacted by these flaws.</strong></p>
<h2 id="header-additional-inclusions">Additional inclusions<a id="additional-inclusions" class="anchor" href="#additional-inclusions" aria-labelledby="header-additional-inclusions"></a></h2><p>We will also be including the following items in these releases for LTS release lines:</p>
<ul>
<li><a href="https://github.com/nodejs/node/pull/21376">inspector: don&#39;t bind to 0.0.0.0 by default (v6.x) #21376</a>: impacts Node.js 6.x (LTS &quot;Boron&quot;) only</li>
<li><a href="https://github.com/nodejs/node/pull/19975">test: update keys/Makefile to clean and build all #19975</a>: impacts the test suite for all actively supported release lines of Node.js</li>
</ul>
<p>The Node.js 10 &quot;Current&quot; release will <em>not</em> be limited to only security-related updates, as per policy for non-LTS release lines.</p>
<h2 id="header-release-timing">Release timing<a id="release-timing" class="anchor" href="#release-timing" aria-labelledby="header-release-timing"></a></h2><p>Releases will be available at, or shortly after, the 15th of August, 2018 (UTC), along with disclosure of details of the flaws addressed in order to allow for complete impact assessment by users.</p>
<h2 id="header-contact-and-future-updates">Contact and future updates<a id="contact-and-future-updates" class="anchor" href="#contact-and-future-updates" aria-labelledby="header-contact-and-future-updates"></a></h2><p>The current Node.js security policy can be found at <a href="https://nodejs.org/en/security/">https://nodejs.org/en/security/</a>.</p>
<p>Please contact <a href="mailto:security@nodejs.org">security@nodejs.org</a> if you wish to report a vulnerability in Node.js.</p>
<p>Subscribe to the low-volume announcement-only nodejs-sec mailing list at <a href="https://groups.google.com/forum/#!forum/nodejs-sec">https://groups.google.com/forum/#!forum/nodejs-sec</a> to stay up to date on security vulnerabilities and security-related releases of Node.js and the projects maintained in the <a href="https://github.com/nodejs/">nodejs GitHub organization</a>.</p>
]]></description><link>https://nodejs.org/en/blog/vulnerability/august-2018-security-releases</link><guid isPermaLink="true">https://nodejs.org/en/blog/vulnerability/august-2018-security-releases</guid><dc:creator><![CDATA[Rod Vagg]]></dc:creator><pubDate>Sat, 11 Aug 2018 11:07:51 GMT</pubDate></item></channel></rss>