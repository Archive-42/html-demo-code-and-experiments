<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE technique
  SYSTEM "../../xmlspec.dtd">
<technique id="FLASH2">
   <short-name>Setting the description property for a non-text object in Flash</short-name>
   <applicability>
      <p use-id="flash.applicability.general"/>
   </applicability>
   <applies-to>
      <success-criterion idref="text-equiv-all" relationship="sufficient"/>
   </applies-to>
   <ua-issues>
      <ua-issue use-id="flash.ua-issue.general"/>
   </ua-issues>
   <description>
      <p>The objective of this technique is to provide a long text  alternative that serves the same purpose and presents the same  information as the original non-text content when a short text  alternative is not sufficient. </p>
      <p>The Flash Player supports long text alternatives to non-text  objects, which can be defined in ActionScript or within Flash authoring  tools using the <prop>description</prop> property, as indicated in the examples  below. </p>
   </description>
   <examples>
      <eg-group>
         <head>Applying a Description for a symbol (graphic, button or movieclip)</head>
         <description>
            <p>The Flash Professional authoring tool's Accessibility panel lets  authors provide accessibility information to assistive technology and  set accessibility options for individual Flash objects or entire Flash  applications. </p>
            <olist>
               <item>
                  <p> For a text alternative to be applied to a non-text object, it must be saved as a symbol in the movie's library. <emph role="strong">Note:</emph> Flash does not support text alternatives for graphic symbols. Instead,  the graphic must be converted to or stored in a movie clip or button  symbol. </p>
               </item>
               <item>
                  <p> Bring up the Accessibility panel by selecting "Window &gt;  Other Panels &gt; Accessibility" in the application menu, or through  the shortcut ALT + F11. Ensure that the 'Make object accessible'  checkbox is checked. </p>
               </item>
               <item>
                  <p> Select the non-text instance on the movie stage, the fields in the Accessibility panel become editable. </p>
               </item>
               <item>
                  <p> Enter a description describing the non-text object's contents  concisely. For example, a diagram could have a 'name' identifying what  information the diagram conveys, while the 'Description' field lists  this information in full detail. Alternatively, for an animation which  is part of an instructional movie about car repairs the name could be:  'how to replace a flat tire', while the long description describes each  step of the process in greater detail. </p>
               </item>
            </olist>
            <p>
								       <emph role="strong">Important:</emph> Only use the 'Description' field if a short text  alternative is not sufficient to describe the objects purpose.  Otherwise, leave the 'Description' field empty. </p>
            <p>
								       <image>
                  <img xmlns:xlink="http://www.w3.org/1999/xlink"
                       source="/WAI/WCAG20/Techniques/working-examples/FLASH2/acc_name_scrn.jpg"
                       width="541"
                       height="218"/>
                  <alt>The Accessibility panel in the Flash authoring environment.</alt>
               </image>
							     </p>
            <!--<ednote>
								<edtext>I suggest this should be a separate image from FLASH1, showing the description field filled out.</edtext>
							</ednote>-->
         </description>
      </eg-group>
      <eg-group>
         <head>Applying Description programmatically in ActionScript 2.0 </head>
         <description>
            <p>To manage an object's text equivalents programmatically using  ActionScript, the <obj>_accProps</obj> object must be used. This references an  object containing accessibility related properties set for the object.  The code example below shows a simple example of how the <obj>_accProps</obj>  object is used to set an objects name and description in ActionScript. </p>
            <p>A chart showing sales for October has a short text alternative  of "October sales chart". The long description would provide more  information, as shown in the code below. </p>
         </description>
         <code xml:space="preserve"><![CDATA[// 'chart_mc' is an instance placed on the movie's main timeline
_root.chart_mc._accProps = new Object();
_root.chart_mc._accProps.name = "October Sales Chart";
_root.chart_mc._accProps.description = "Bar Chart showing sales for October.\
  There are 6 salespersons.Maria is highest with 349 units.Frances is next\
  with 301.Then comes Juan with 256, Sue with 250, Li with 200 and Max\
  with 195.The primary use of the chart is to show leaders, so the description\
  is in sales order.";]]></code>
      </eg-group>
      <eg-group>
         <head>Applying Description programmatically in ActionScript 3.0</head>
         <description>
            <p>To manage an object's text equivalents programmatically using  ActionScript, the <obj>AccessibilityProperties</obj> object must be used. The code  example below shows a simple example of how the <obj>AccessibilityProperties</obj>  object used to set an objects name and description in ActionScript. </p>
            <p>A chart showing sales for October has a short text alternative  of "October sales chart". The long description would provide more  information, as shown in the code below. </p>
         </description>
         <code xml:space="preserve"><![CDATA[// 'chart_mc' is an instance placed on the movie's main timeline
chart_mc.accessibilityProperties = new AccessibilityProperties();
chart_mc.accessibilityProperties.name = "October Sales Chart";
chart_mc.accessibilityProperties.description = "Bar Chart showing sales for October.\
  There are 6 salespersons.Maria is highest with 349 units.Frances is next\
  with 301.Then comes Juan with 256, Sue with 250, Li with 200 and Max\
  with 195.The primary use of the chart is to show leaders, so the description\
  is in sales order.";]]></code>
      </eg-group>
   </examples>
   <resources>
      <see-also>
         <ulist>
            <item>
               <p>
									         <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                       href="http://www.adobe.com/accessibility.htmlproducts/flash/text.html">Adobe Flash Documentation for Text Equivalents</loc>
								       </p>
            </item>
            <item>
               <p>
									         <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                       href="http://www.eclipse.org/actf/downloads/tools/aDesigner/">aDesigner</loc>
								       </p>
            </item>
            <item>
               <p>
									         <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                       href="https://msdn.microsoft.com/en-us/library/ms695716.aspx">MS Active Accessibility 2.0 inspection tools</loc>
								       </p>
            </item>
         </ulist>
      </see-also>
   </resources>
   <related-techniques>
      <relatedtech idref="FLASH1"/>
      <relatedtech idref="G94"/>
   </related-techniques>
   <tests>
      <procedure>
         <olist>
            <item>
               <p> Publish the SWF file </p>
            </item>
            <item>
               <p> Open the SWF file in Internet Explorer 6 or higher (using  Flash Player 6 or higher), or Firefox 3 or higher (using Flash Player 9  or higher) </p>
            </item>
            <item>
               <p> Use a tool which is capable of showing an object's long description, such as ACTF aDesigner 1.0 to open the Flash movie. </p>
            </item>
            <item>
               <p> In the GUI summary panel, loop over each object which is  contained by the Flash movie and ensure the object that was provided a  description has a proper description value appearing in the tool's  display. </p>
            </item>
            <item>
               <p> Authors may also test with a screen reader, by reading the  Flash content and listening to hear that the description is read when  tabbing to the non-text object (if it is tabbable) or hearing the  alternative text read when reading the content line-by-line. </p>
            </item>
            <item>
               <p> All non-text objects have text equivalents that can serve  the same purpose and convey the same information as the non-text  object. </p>
            </item>
         </olist>
      </procedure>
      <expected-results>
         <p>#6 is true.</p>
      </expected-results>
   </tests>
   <admin>
      <source>
						   <loc xmlns:xlink="http://www.w3.org/1999/xlink"
              href="http://trace.wisc.edu/wcag_wiki/index.php?title=Setting_the_description_property_for_a_non-text_object_in_Flash"/>
					</source>
   </admin>
</technique>
