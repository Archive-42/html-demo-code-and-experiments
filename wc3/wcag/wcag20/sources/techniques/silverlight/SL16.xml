<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE technique
  SYSTEM "../../xmlspec.dtd">
<technique id="SL16">
   <short-name>Providing Script-Embedded Text Captions for MediaElement Content</short-name>
   <applicability>
      <p use-id="silverlight.applicability.general"/>
   </applicability>
   <applies-to>
      <success-criterion idref="media-equiv-captions" relationship="sufficient"/>
   </applies-to>
   <ua-issues>
      <ua-issue use-id="silverlight.ua-issue.general"/>
   </ua-issues>
   <description>
      <p>The objective of this technique is to use text captioning that is
    				embedded in the stream with media displayed in a Silverlight <obj>MediaElement</obj>,
    				and present that text captioning in a separate Silverlight control
    				or text element. </p>
      <p>This particular technique uses scripting files with a <obj>TimelineMarkers</obj> collection
    				that are embedded directly within the media file. When text captioning
    				is embedded directly in the streams, synchonization of the scripting
    				stream versus the video content stream is done automatically by the <obj>MediaElement</obj> component.
    				Each time the <event>MarkerReached</event> event fires, that is an
    				indication that a synch point in the video that corresponds to a script
    				marker entry has been reached. Silverlight application authors can
    				obtain the text from the relevant timeline marker entry through their
    				event handler implementations, and can display captions in the user
    				interface area where the text captions are displayed. Typical Silverlight
    				controls that can be used for displaying text captions include <obj>TextBlock</obj> (nonfocusable), <obj>TextBox</obj>,
    				or <obj>RichTextBox</obj>. A typical interface design would place
    				the caption-display control in close proximity to the <obj>MediaElement</obj> control
    				that is being captioned, for example might place the captions directly
    				underneath the <obj>MediaElement</obj> "screen". </p>
      <p>Script-embedded captions are captions that are stored directly in
    				the media file as metadata, rather than as a separate file. For information
    				about techniques for captions in separate files, see <specref ref="SL28"/>. </p>
      <section id="SL16_tools">
         <head> Tools </head>
         <p>Producing the media file with <obj>TimelineMarkers</obj> captions
    					directly in embedded scripting can be accomplished using the Microsoft
    					Expression Encoder tool. Online help for the procedure of encoding
    					scripting with text captions in the stream are available in the offline
    					Help file that installs with the Microsoft Expression 4 Encoder products.
    					For more information, see <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                 href="http://go.microsoft.com/fwlink/?LinkID=321498">Expression
    						Encoder Pro Overview</loc>.</p>
         <p>There is a <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                 href="https://msdn.microsoft.com/en-us/library/dd743937%28VS.85%29.aspx">public
    					API</loc> for introducing Markers into a WMV file, as part of the Windows
    					Media Format SDK. Using Expression Encoder is the way that the task
    					of directly embedding <obj>TimelineMarkers</obj> is presented
    					and taught in Microsoft's available instructional material on Silverlight.
    					However, because the mechanism is public, it is possible that other
    					tools exist or will exist that can also produce media with script-encoded <obj>TimelineMarkers</obj>. </p>
      </section>
   </description>
   <examples>
      <eg-group>
         <head>MediaElement handles MarkerReached, displays marker text
    					in existing TextBox</head>
         <description>
            <p>This example has a UI definition in XAML and interaction logic in
    						C#. The following is the basic UI in XAML. This example is deliberately
    						simple and does not include <obj>AutomationProperties</obj> for
    						identification or user instructions. The most relevant part of this
    						example is that the Silverlight author declares a handler for the event <event>MarkerReached</event>.
    						This event fires potentially hundreds of times, once for each caption
    						in the stream. Each time the event fires, the event handler runs and
    						adds the text to the dedicated <obj>TextBox</obj> in the user
    						interface. </p>
            <codeblock xml:space="preserve"><![CDATA[<UserControl x:Class="MediaTimelineMarkers.MainPage"
   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
>
   <StackPanel x:Name="LayoutRoot" Background="White">
       <MediaElement MarkerReached="OnMarkerReached"
       HorizontalAlignment="Left"
       Source="/spacetime.wmv"
       Width="300" Height="200" />
       <ScrollViewer>
           <TextBox Name="captionText" Height="40"
           IsReadOnly="true" AcceptsReturn="true"/>
       </ScrollViewer>
   </StackPanel>
 </UserControl>

private void OnMarkerReached(object sender, TimelineMarkerRoutedEventArgs e)
{
   captionText.Focus();
   captionText.SelectedText = e.Marker.Text.ToString() + "\n";
}
]]></codeblock>
            <p>This example is shown in operation in the <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                    href="MediaTimelineMarkersTestPage.html"
                    linktype="examples">working example of Media Timeline Markers</loc>.</p>
         </description>
      </eg-group>
   </examples>
   <resources>
      <see-also>
         <ulist>
            <item>
               <p>
                  <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                       href="https://msdn.microsoft.com/en-us/library/cc189078(VS.95).aspx">Audio
    					and Video Overview</loc> 
               </p>
            </item>
            <item>
               <p>
                  <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                       href="https://msdn.microsoft.com/en-us/library/system.windows.controls.mediaelement%28VS.95%29.aspx">MediaElement
    					Class</loc> 
               </p>
            </item>
            <item>
               <p>
                  <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://amp.codeplex.com/">Accessible
    						Media Project</loc> - a reference implementation MediaPlayer control
    						from the Silverlight product team that includes several accessibility
    						features including captioning; note that the codebase might not be
    						updated to Silverlight version 4 </p>
            </item>
         </ulist>
      </see-also>
   </resources>
   <related-techniques>
      <relatedtech idref="SL17"/>
      <relatedtech idref="SL28"/>
   </related-techniques>
   <tests>
      <procedure>
         <olist>
            <item>
               <p> Using a browser that supports Silverlight, open an HTML page that
    					references a Silverlight application through an object tag. The application
    					plays media that is expected to have text captioning. </p>
            </item>
            <item>
               <p> Check that a text area in the user interface shows captions for
    						the media. </p>
            </item>
         </olist>
      </procedure>
      <expected-results>
         <p># 2 is true. </p>
      </expected-results>
   </tests>
   <admin>
      <source>
         <loc xmlns:xlink="http://www.w3.org/1999/xlink"
              href="http://trace.wisc.edu/wcag_wiki/index.php?title=Providing_Script-Embedded_Text_Captions_for_MediaElement_Content"/>
      </source>
   </admin>
</technique>
