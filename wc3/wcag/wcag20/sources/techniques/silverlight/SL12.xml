<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE technique
  SYSTEM "../../xmlspec.dtd">
<technique id="SL12">
   <short-name>Pausing, Stopping, or Playing Media in Silverlight MediaElements</short-name>
   <applicability>
      <p use-id="silverlight.applicability.general"/>
   </applicability>
   <applies-to>
      <success-criterion idref="time-limits-pause" relationship="sufficient"/>
   </applies-to>
   <ua-issues>
      <ua-issue use-id="silverlight.ua-issue.general"/>
   </ua-issues>
   <description>
      <p>The objective of this technique is to create a control user interface
    				for the Silverlight <obj>MediaElement</obj> object. The controls
    				enable users to pause or stop the video to prevent the video images
    				on the <obj>MediaElement</obj> surface from moving, and stop
    				video-associated audio. These UI controls enable an interaction defined
    				in code event handlers. Each handler calls one of the following <obj>MediaElement</obj> methods: </p>
      <ulist>
         <item>
            <p> 
               <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                    href="https://msdn.microsoft.com/en-us/library/system.windows.controls.mediaelement.pause%28VS.95%29.aspx">Pause</loc> 
            </p>
         </item>
         <item>
            <p> 
               <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                    href="https://msdn.microsoft.com/en-us/library/system.windows.controls.mediaelement.play%28VS.95%29.aspx">Play</loc> 
            </p>
         </item>
         <item>
            <p> 
               <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                    href="https://msdn.microsoft.com/en-us/library/system.windows.controls.mediaelement.stop%28VS.95%29.aspx">Stop</loc> 
            </p>
         </item>
      </ulist>
      <p>Note that by default, a <obj>MediaElement</obj> will start playing
    				its media as soon as the UI loads completely AND the media source file
    				is downloaded (or a certain buffer size is reached, in the case of
    				streaming media). Use the <prop>AutoPlay</prop> property to change
    				this default. </p>
   </description>
   <examples>
      <eg-group>
         <head>Providing MediaElement controls in the UI</head>
         <description>
            <p>This example has a UI definition in XAML and interaction logic in
    					C#. </p>
            <codeblock xml:space="preserve"><![CDATA[<UserControl x:Class="MediaElementControls.MainPage"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
 >
  <Grid x:Name="LayoutRoot">
      <StackPanel>
          <MediaElement x:Name="media" Source="/xbox.wmv"
         Width="300" Height="300" 
         AutomationProperties.Name="Video of new Fable game for XBox"           
      />
          <Grid Name="UIControls">
              <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                  <RowDefinition Height="*" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="20" />
              </Grid.RowDefinitions>
              <Button Click="StopMedia" 
   Grid.Column="0" Grid.Row="1" Content="Stop" />
              <Button Click="PauseMedia" 
   Grid.Column="1" Grid.Row="1" Content="Pause" />
              <Button Click="PlayMedia" 
   Grid.Column="2" Grid.Row="1" Content="Play" />
              <Button Click="MuteMedia" 
  Grid.Row="2" Grid.Column="0" Content="Mute" />
              <TextBlock Name="VolumeLabel" Grid.Row="2" Grid.Column="1" HorizontalAlignment="Right">Volume</TextBlock>
              <Slider Height="20"
          Value="{Binding Volume, Mode=TwoWay, ElementName=media}"
          Minimum="0" Maximum="1"
          Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="2"
              AutomationProperties.LabeledBy="{Binding ElementName=VolumeLabel}"/>
          </Grid>
      </StackPanel>
  </Grid>
</UserControl>

private void StopMedia(object sender, RoutedEventArgs e)
{
    media.Stop();
}
private void PauseMedia(object sender, RoutedEventArgs e)
{
    media.Pause();
}
private void PlayMedia(object sender, RoutedEventArgs e)
{
    media.Play();
}
private void MuteMedia(object sender, RoutedEventArgs e)
{
    Button target = sender as Button;
    // mute if not muted, unmute if already muted, in either case make sure the button content for text and accessibility info is updated
    if (!media.IsMuted)
    {
        media.IsMuted = true;
        target.Content = "Unmute";
    }
    else
    {
         media.IsMuted = false;
         target.Content = "Mute";
     }
}
]]></codeblock>
            <p>This example is shown in operation in the <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                    href="/WAI/WCAG20/Techniques/working-examples/SL3/MediaElementControlsTestPage.html">working example of Media Element Controls</loc>.</p>
         </description>
      </eg-group>
   </examples>
   <resources>
      <see-also>
         <ulist>
            <item>
               <p>
                  <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                       href="https://msdn.microsoft.com/en-us/library/cc189078(VS.95).aspx">Audio
    					and Video Overview</loc> 
               </p>
            </item>
            <item>
               <p>
                  <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                       href="https://msdn.microsoft.com/en-us/library/system.windows.controls.mediaelement%28VS.95%29.aspx">MediaElement
    					Class</loc> 
               </p>
            </item>
            <item>
               <p>
                  <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://smf.codeplex.com/">Silverlight
    						Media Framework</loc> - a framework and a media player control implementation
    						that incorporates many of the Silverlight techniques related to <obj>MediaElement</obj> 
               </p>
            </item>
         </ulist>
      </see-also>
   </resources>
   <related-techniques>
      <relatedtech idref="SL17"/>
      <relatedtech idref="SL24"/>
   </related-techniques>
   <tests>
      <procedure>
         <olist>
            <item>
               <p> Using a browser that supports Silverlight, open an HTML page that
    					references a Silverlight application through an object tag. The application
    					is expected to incorporate a <obj>MediaElement</obj> in the
    					user interface. </p>
            </item>
            <item>
               <p> Check that interactive controls are available so that users can
    						pause or stop the media. </p>
            </item>
            <item>
               <p> Check that when activated, the controls stop or pause the media. </p>
            </item>
         </olist>
      </procedure>
      <expected-results>
         <p>#2 and #3 are true. </p>
      </expected-results>
   </tests>
   <admin>
      <source>
         <loc xmlns:xlink="http://www.w3.org/1999/xlink"
              href="http://trace.wisc.edu/wcag_wiki/index.php?title=Pausing,_Stopping,_or_Playing_Media_in_Silverlight_MediaElements"/>
      </source>
   </admin>
</technique>
