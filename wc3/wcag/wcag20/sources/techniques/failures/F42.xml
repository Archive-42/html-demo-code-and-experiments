<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE technique
  SYSTEM "../../xmlspec.dtd">
<technique id="F42">
   <short-name>Failure of Success Criteria 1.3.1, 2.1.1, 2.1.3, or 4.1.2 when emulating links</short-name>
   <applicability>
      <p>HTML and XHTML</p>
   </applicability>
   <applies-to>
      <success-criterion idref="content-structure-separation-programmatic" relationship="failure"/>
      <success-criterion idref="keyboard-operation-keyboard-operable" relationship="failure"/>
      <success-criterion idref="keyboard-operation-all-funcs" relationship="failure"/>
      <success-criterion idref="ensure-compat-rsv" relationship="failure"/>
   </applies-to>
   <description>
      <p>This failure occurs when JavaScript event handlers are attached to elements
                        to emulate links. A link created in this manner cannot be tabbed to from the keyboard and does not gain keyboard focus like other controls and/or links.
            If scripting events are used to emulate links, user
                        agents including assistive technology may not be able to identify the links
                        in the content as links. They may be recognized as interactive controls but still not recognized as links.  Such elements do not appear in the links
                        list generated by user agents or assistive technology.</p>
                        <p><note>It is possible to use the ARIA <att>role</att> attribute to identify an anonymous element as link control for assistive technologies. However, best practice for ARIA calls for <loc href="http://www.w3.org/TR/aria-in-html/#first-rule-of-aria-use">making use of native elements whenever possible</loc>, so the use of the <att>role</att> attribute to identify anonymous elements as links is not recommended.</note></p>
      <p>The <el>a</el> and <el>area</el>
                        elements are intended to mark up links.</p>
   </description>
   <examples>
      <eg-group role="failure">
         <head>Scripting a <el>span</el> element</head>
         <description>
            <p>Scripted event handling is added to a <el>span</el> element so
                                that it functions as a link when clicked with a mouse. Assistive
                                technology does not recognize this element as a link.</p>
         </description>
         <code role="html401"><![CDATA[
<span onclick="location.href='newpage.html'">
    Fake link
</span>
]]></code>
      </eg-group>
      <eg-group role="failure">
         <head>Scripting an <el>img</el> element</head>
         <description>
            <p>Scripted event handling is added to an <el>img</el> element so
                                that it functions as a link when clicked with a mouse. Assistive
                                technology does not recognize this element as a link.</p>
         </description>
         <code role="html401"><![CDATA[
   <img src="go.gif" 
   alt="go to the new page" 
   onclick="location.href='newpage.html'">
]]></code>
      </eg-group>
      <eg-group role="failure">
         <head>Scripting an <el>img</el> element, with keyboard
                            support</head>
         <description>
            <p>Scripted event handling is added to an <el>img</el> element so
                                that it functions as a link. In this example, the link functionality
                                can be invoked with the mouse or via the Enter key if the user agent
                                includes the element in the tab chain. Nevertheless, the element
                                will not be recognized as a link.</p>
         </description>
         <code role="html401"><![CDATA[
function doNav(url)
{
   window.location.href = url;
}

function doKeyPress(url)
{
   //if the enter key was pressed
   if (window.event.type == "keypress" &&
       window.event.keyCode == 13)
   {
      doNav(url);
   }
}
]]></code>
         <description>
            <p>The markup for the image is:</p>
         </description>
         <code role="html401"><![CDATA[
<p>
	<img src="bargain.jpg"
		tabindex="0" 
		alt="View Bargains"
		onclick="doNav('viewbargains.html');"
		onkeypress="doKeyPress('viewbargains.html');">
</p>
]]></code>
      </eg-group>
      <eg-group role="failure">
         <head>Scripting a <el>div</el> element</head>
         <description>
            <p>This example uses script to make a <el>div</el> element behave
                                like a link. Although the author has provided complete keyboard
                                access and separated the event handlers from the markup to enable
                                repurposing of the content, the <el>div</el> element will not be
                                recognized as a link by assistive technology.</p>
         </description>
         <code role="html401"><![CDATA[
window.onload = init;

function init()
{
	var objAnchor = document.getElementById('linklike');

	objAnchor.onclick = function(event){return changeLocation(event,
'surveyresults.html');};
	objAnchor.onkeypress = function(event){return changeLocation(event,
'surveyresults.html');};
}

function changeLocation(objEvent, strLocation)
{
	var iKeyCode;

	if (objEvent && objEvent.type == 'keypress')
	{
		if (objEvent.keyCode)
			iKeyCode = objEvent.keyCode;
		else if (objEvent.which)
			iKeyCode = objEvent.which;

		if (iKeyCode != 13 && iKeyCode != 32)
			return true;
	}

	window.location.href = strLocation;
}
]]></code>
         <description>
            <p>The markup for the <el>div</el> element is:</p>
         </description>
         <code role="html401"><![CDATA[
<div id="linklike">
View the results of the survey.
</div>
]]></code>
      </eg-group>
   </examples>
   <resources>
      <see-also>
         <ulist>
            <item>
               <p>
                  <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                       href="http://www.w3.org/TR/wai-aria/">Accessible Rich Internet Applications (WAI-ARIA) Version 1.0</loc>
               </p>
            </item>
         </ulist>
      </see-also>
   </resources>
   <related-techniques>
      <relatedtech idref="G115"/>
      <relatedtech idref="F59"/>
   </related-techniques>
   <tests>
      <procedure>
		<p>For all elements presented as links which use JavaScript event handlers to make the element emulate a link:</p>
         <olist>
            <item>
               <p>Check if the programmatically determined role of the element is <prop>link</prop>.</p>
            </item>
            <item>
               <p>Check if the emulated link can be activated using the keyboard.</p>
            </item>
         </olist>
      </procedure>
      <expected-results>
         <ulist>
            <item>
               <p>If check #1 is false then this failure condition applies and the content fails Success Criteria 1.3.1 and 4.1.2.
               If check #2 is false then this failure condition applies and the content fails Success Criteria 2.1.1 and 2.1.3.</p>
            </item>
         </ulist>
      </expected-results>
   </tests>
</technique>
