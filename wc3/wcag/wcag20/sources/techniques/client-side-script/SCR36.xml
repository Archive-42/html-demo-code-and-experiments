<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE technique
  SYSTEM "../../xmlspec.dtd">
<technique id="SCR36">
   <short-name>Providing a mechanism to allow users to display moving, scrolling, or auto-updating text in a static window or area</short-name>
   <applicability>
      <p>Any technology that moves, blinks, or updates text and can create a static block of text. </p>
   </applicability>
   <applies-to>
      <success-criterion idref="time-limits-required-behaviors" relationship="sufficient"/>
   </applies-to>
   <description>
      <p>Some Web pages display scrolling text because there is limited space available. Scrolling the text in a small text window makes the content available for users who can read quickly enough, but causes problems for users who read more slowly or use assistive technology. This technique provides a mechanism to stop the movement and make the entire block of text available statically. The text may be made available in a separate window or in a (larger) section of the page. Users can then read the text at their own speed. </p>
      <p>This technique does not apply when the text that is moving can not be displayed all at once on the screen (e.g., a long chat conversation).</p>
      <note>
         <p>This technique can be used in combination with a style switching technique to present a page that is a <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                 href="conforming-alternate-versiondef"
                 linktype="glossary">conforming alternate version</loc> for non-conforming content. Refer to <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="C29" linktype="css">C29: Using a style switcher to provide a conforming alternate version</loc> and <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                 href="conformance"
                 locn-note="uc-conforming-alt-versions-head"
                 linktype="understanding">Understanding Conforming Alternate Versions</loc> for more information. </p>
      </note>
   </description>
   <examples>
      <eg-group>
         <head>Expanding Scrolling Text in Place </head>
         <description>
            <p>A large block of text is scrolled through a small marquee area of the page. A button lets the user stop the scrolling and display the entire block of text. </p>
            <note>
               <p>This code example requires that both CSS and JavaScript be turned on and available. </p>
            </note>
            <p>The CSS component:</p>
         </description>
         <code role="css"><![CDATA[#scrollContainer {
        visibility: visible;
        overflow: hidden;
        top: 50px; left: 10px;
        background-color: darkblue;
      }
      .scrolling {
        position: absolute;
        width: 200px;
        height: 50px;
      }
      .notscrolling {
        width: 500px;
        margin:10px;
      }
      #scrollingText {
        top: 0px;
        color: white;
      }
      .scrolling #scrollingText {
        position: absolute;
      }
      </a>    ]]></code>
         <description>
            <p>The script and HTML content:</p>
         </description>
         <code role="css"><![CDATA[<script type="text/javascript">

      var tid;
      function init() {
        var st = document.getElementById('scrollingText');
        st.style.top = '0px';
        initScrolling();
      }
      function initScrolling () {
        tid = setInterval('scrollText()', 300);
      }
      function scrollText () {
        var st = document.getElementById('scrollingText');
        if (parseInt(st.style.top) > (st.offsetHeight*(-1) + 8)) {
          st.style.top = (parseInt(st.style.top) - 5) + 'px';
        } else {
          var sc = document.getElementById('scrollContainer');
          st.style.top = parseInt(sc.offsetHeight) + 8 + 'px';
        }
      }
      function toggle() {
        var scr = document.getElementById('scrollContainer');
        if (scr.className == 'scrolling') {
          scr.className = 'notscrolling';
          clearInterval(tid);
           document.getElementById('scrollButton').value="Shrink";
        } else {
          scr.className = 'scrolling';
          initScrolling();
          document.getElementById('scrollButton').value="Expand";
        }
      }
  <input type="button" id="scrollButton" value="Expand" onclick="toggle()" />
  <div id="scrollContainer" class="scrolling">
    <div id="scrollingText" class="on">
    .... Text to be scrolled ...
    </div>
  </div>
...
]]></code>
         <description>
            <p>Working example of this code: <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                    href="scrolltext.html"
                    linktype="examples">Expanding Scrolling Text in Place</loc>.</p>
         </description>
      </eg-group>
   </examples>
   <related-techniques>
      <relatedtech idref="G4"/>
      <relatedtech idref="G187"/>
      <relatedtech idref="SCR33"/>
      <relatedtech idref="SCR22"/>
   </related-techniques>
   <tests/>
</technique>
