# This is the main configuration file for the application.
# ~~~~~

vs {

    smtp {
        tls = false
        ssl = false
        port = 25
        host = "localhost"
        #user = ""
        #password = ""
    }

    emails {
        # the address we send emails as
        sender = "validator-suite-no-reply@example.com"
        # expiration of the password reset token in seconds
        resetCacheExpire = 3600
    }

}

# Root password
root.password="$2a$10$E5sHlrwZSgMBYqJ6TNPPiuWuD3tirINscsWvtjbayva1f9rKHKFXW"

application.global = org.w3.vs.Global

application {
  langs="en,en-US"
  context="/"
  timeout = "15s"

  # number of days to increment a user's expire date when he is added credits or created
  expireDate.plusDaysOnCredits = 90
  expireDate.plusDaysOnCreate = 90

  # default number of days of validity of a coupon
  expireDate.couponValidityInDays = 90

  mongodb {
    node = "localhost:27017"
    db-name = "vs-test"
  }

  graphite-reporter {
    enable = false
    period = "10s"
    host = "my-graphite-host.example.com"
    port = 2003
    prefix = "validator-suite-test"
  }

  assertor {
    http-client {
      user-agent = "Validator Suite (http://validator-suite.example.com)"
      timeout = 3000
    }

    local-validator {
      port = 10001
    }

    # i18n-checker configuration
    # https://github.com/w3c/validator-suite/wiki/I18n-checker
    i18n-checker {
      url = "http://localhost:11010/check.php"
    }

    markup-validator {
      url = "http://my-markup-validator-host.example.com/check"
    }
  }

  http-client {
    timeout = 30000
    maximum-connections-total = 1000
    maximum-connectionsper-host = 15
    user-agent = "Validator Suite (http://validator-suite.example.com)"
  }

  http-cache {
    enable = true
    create-if-not-exist = true
    clean-at-startup = false
    directory = "./test/resources/w3c-cache"
    use-token = true
  }

  vs {
    akka {
        loglevel = INFO
        loggers = ["akka.event.slf4j.Slf4jLogger"]
        log-dead-letters = 0
        log-dead-letters-during-shutdown = off
    }

    jobactor-dispatcher {
      mailbox-type = org.w3.vs.actor.JobActorMailbox
      type = Dispatcher
      executor = "fork-join-executor"
      fork-join-executor {
        parallelism-min = 2
        parallelism-factor = 2.0
        parallelism-max = 10
      }
      throughput = 1
    }

    reactivemongo-dispatcher {
      mailbox-type = org.w3.vs.actor.JobActorMailbox
      type = Dispatcher
      executor = "fork-join-executor"
      fork-join-executor {
        parallelism-min = 2
        parallelism-factor = 2.0
        parallelism-max = 10
      }
      throughput = 1
    }

    http-dispatcher {
      type = Dispatcher
      executor = "fork-join-executor"
      fork-join-executor {
        parallelism-min = 2
        parallelism-factor = 2.0
        parallelism-max = 10
      }
      throughput = 1
    }

    assertor-dispatcher {
      type = Dispatcher
      executor = "thread-pool-executor"
      thread-pool-executor {
        core-pool-size-min = 5
        core-pool-size-factor = 2.0
        core-pool-size-max = 20
      }
      throughput = 1
    }
  }
}

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="hSRsmEkK1hd]d40cS6iQ;HxoX7/hDLT@x:87IG:KoSFxAEiO=siPilyYgV>X0>ZC"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# global=Global

#default timeout for promises
promise.akka.actor.typed.timeout=60s

# Cache
cache.user.expire=300

website.url="http://localhost:9000"

support.email="validator-suite-support@example.com"
contact.email="validator-suite-contact@example.com"

akka {
  actor {
    jobactor-dispatcher = {
      fork-join-executor {
        parallelism-factor = 1.0
        parallelism-max = 24
      }
    }
  }
}
